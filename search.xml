<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群</title>
      <link href="/k8s1/5210c150a64d/"/>
      <url>/k8s1/5210c150a64d/</url>
      
        <content type="html"><![CDATA[<h1 id="k8s实践-一-：Centos7-6部署k8s-v1-18-14-集群"><a href="#k8s实践-一-：Centos7-6部署k8s-v1-18-14-集群" class="headerlink" title="k8s实践(一)：Centos7.6部署k8s(v1.18.14)集群"></a>k8s实践(一)：Centos7.6部署k8s(v1.18.14)集群</h1><p>k8s github地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kubernetes</span><br></pre></td></tr></table></figure><p><strong>环境说明：</strong></p><table><thead><tr><th align="center">主机名</th><th align="center">操作系统版本</th><th align="center">ip</th><th align="center">docker version</th><th align="center">kubelet version</th><th align="center">kubeadm version</th><th align="center">kubectl version</th><th align="center">flannel version</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">master</td><td align="center">Centos 7.6.1810</td><td align="center">172.27.9.131</td><td align="center">Docker 18.09.6</td><td align="center">V1.18.14</td><td align="center">V1.18.14</td><td align="center">V1.18.14</td><td align="center">V0.11.0</td><td align="center">master主机</td></tr><tr><td align="center">node01</td><td align="center">Centos 7.6.1810</td><td align="center">172.27.9.135</td><td align="center">Docker 18.09.6</td><td align="center">V1.18.14</td><td align="center">V1.18.14</td><td align="center">V1.18.14</td><td align="center">V0.11.0</td><td align="center">node节点</td></tr><tr><td align="center">node02</td><td align="center">Centos 7.6.1810</td><td align="center">172.27.9.136</td><td align="center">Docker 18.09.6</td><td align="center">V1.18.14</td><td align="center">V1.18.14</td><td align="center">V1.18.14</td><td align="center">V0.11.0</td><td align="center">node节点</td></tr></tbody></table><p><strong>Centos7.6安装详见：</strong><a href="https://blog.51cto.com/3241766/2398136"> Centos7.6操作系统安装及优化全纪录</a></p><p>Kubernetes这个名字源自希腊语，意思是“舵手”，也是“管理者”，“治理者”等词的源头。k8s是Kubernetes的简称（用数字『8』替代中间的8个字母『ubernete』）</p><p><strong>前言：</strong>本文通过kudeadm方式在centos7.6上安装kubernetes v1.14.2集群(目前centos和kubernetes都为最新版)，共分为六个部分：<br><strong>一、Docker安装；<br>二、k8s安装准备工作；<br>三、Master节点安装；<br>四、Node节点安装；<br>五、Dashboard安装；<br>六、集群测试。</strong></p><h1 id="一、Docker安装"><a href="#一、Docker安装" class="headerlink" title="一、Docker安装"></a>一、Docker安装</h1><p><strong>所有节点都需要安装docker</strong></p><h2 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1. 安装依赖包"></a>1. 安装依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum install -y yum-utils   device-mapper-persistent-data   lvm2</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncl89u9j30sh0pjdr5.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_dashboard"></p><h2 id="2-设置Docker源"><a href="#2-设置Docker源" class="headerlink" title="2. 设置Docker源"></a>2. 设置Docker源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum-config-manager     --add-repo     https://download.docker.com/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7nct5wzuj30ph02n3zl.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_dashboard_02"></p><h2 id="3-安装Docker-CE"><a href="#3-安装Docker-CE" class="headerlink" title="3. 安装Docker CE"></a>3. 安装Docker CE</h2><h3 id="3-1-docker安装版本查看"><a href="#3-1-docker安装版本查看" class="headerlink" title="3.1 docker安装版本查看"></a>3.1 docker安装版本查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum list docker-ce --showduplicates | sort -r</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7nco4ubrj30o20bb79h.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_dashboard_03"></p><h3 id="3-2-安装docker"><a href="#3-2-安装docker" class="headerlink" title="3.2 安装docker"></a>3.2 安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [root@centos7 ~]# yum install docker-ce-18.09.6 docker-ce-cli-18.09.6 containerd.io</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># yum install docker-ce-19.03.1 docker-ce-cli-19.03.1 containerd.io</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncnlv9fj31gc0oz7g5.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_v1.4.2_04"><br>指定安装的docker版本为20.10.11，由于该版本目前为最新版，故可以直接安装，不用指定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h2 id="4-启动Docker"><a href="#4-启动Docker" class="headerlink" title="4. 启动Docker"></a>4. 启动Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># systemctl start docker</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># systemctl enable docker</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncj0ab6j30tw018t98.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_dashboard_05"></p><h2 id="5-命令补全"><a href="#5-命令补全" class="headerlink" title="5. 命令补全"></a>5. 命令补全</h2><h3 id="5-1-安装bash-completion"><a href="#5-1-安装bash-completion" class="headerlink" title="5.1 安装bash-completion"></a>5.1 安装bash-completion</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum -y install bash-completion</span></span><br></pre></td></tr></table></figure><h3 id="5-2-加载bash-completion"><a href="#5-2-加载bash-completion" class="headerlink" title="5.2 加载bash-completion"></a>5.2 加载bash-completion</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 /]<span class="comment"># source /etc/profile.d/bash_completion.sh</span></span><br></pre></td></tr></table></figure><h2 id="6-镜像加速"><a href="#6-镜像加速" class="headerlink" title="6. 镜像加速"></a>6. 镜像加速</h2><p>由于Docker Hub的服务器在国外，下载镜像会比较慢，可以配置镜像加速器。主要的加速器有：Docker官方提供的中国registry mirror、阿里云加速器、DaoCloud 加速器，本文以阿里加速器配置为例。</p><h3 id="6-1-登陆阿里云容器模块"><a href="#6-1-登陆阿里云容器模块" class="headerlink" title="6.1 登陆阿里云容器模块"></a>6.1 登陆阿里云容器模块</h3><p>登陆地址为：<a href="https://cr.console.aliyun.com/"> https://cr.console.aliyun.com</a> ,未注册的可以先注册阿里云账户</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncjcy2zj30ry0ntmzw.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_centos7.6_06"></p><h3 id="6-2-配置镜像加速器"><a href="#6-2-配置镜像加速器" class="headerlink" title="6.2 配置镜像加速器"></a>6.2 配置镜像加速器</h3><p><strong>配置daemon.json文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># mkdir -p /etc/docker</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://v16stybc.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>重启服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7nclq34uj30ht04amy7.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_07"><br>加速器配置完成</p><h2 id="7-验证"><a href="#7-验证" class="headerlink" title="7. 验证"></a>7. 验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># docker --version</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># docker run hello-world</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7nck9c9tj30lc0aradt.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_centos7.6_08"><br>通过查询docker版本和运行容器hello-world来验证docker是否安装成功。</p><h1 id="二、k8s安装准备工作"><a href="#二、k8s安装准备工作" class="headerlink" title="二、k8s安装准备工作"></a>二、k8s安装准备工作</h1><p>安装Centos是已经禁用了防火墙和selinux并设置了阿里源。<strong>master和node节点都执行本部分操作</strong>。</p><h2 id="1-配置主机名"><a href="#1-配置主机名" class="headerlink" title="1. 配置主机名"></a>1. 配置主机名</h2><h3 id="1-1-修改主机名"><a href="#1-1-修改主机名" class="headerlink" title="1.1 修改主机名"></a>1.1 修改主机名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># hostnamectl set-hostname master</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># more /etc/hostname             </span></span><br><span class="line">master</span><br></pre></td></tr></table></figure><p>退出重新登陆即可显示新设置的主机名master</p><h3 id="1-2-修改hosts文件"><a href="#1-2-修改hosts文件" class="headerlink" title="1.2 修改hosts文件"></a>1.2 修改hosts文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span></span><br><span class="line">172.27.9.131    master</span><br><span class="line">172.27.9.135    node01</span><br><span class="line">172.27.9.136    node02</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncqsspbj30ix043q3w.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_09"></p><h2 id="2-验证mac地址uuid"><a href="#2-验证mac地址uuid" class="headerlink" title="2. 验证mac地址uuid"></a>2. 验证mac地址uuid</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat /sys/class/net/ens33/address</span></span><br><span class="line">[root@master ~]<span class="comment"># cat /sys/class/dmi/id/product_uuid</span></span><br></pre></td></tr></table></figure><p>保证各节点mac和uuid唯一</p><h2 id="3-禁用swap"><a href="#3-禁用swap" class="headerlink" title="3. 禁用swap"></a>3. 禁用swap</h2><h3 id="3-1-临时禁用"><a href="#3-1-临时禁用" class="headerlink" title="3.1 临时禁用"></a>3.1 临时禁用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># swapoff -a</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncjsfq3j30kn03fwf8.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_10"></p><h3 id="3-2-永久禁用"><a href="#3-2-永久禁用" class="headerlink" title="3.2 永久禁用"></a>3.2 永久禁用</h3><p>若需要重启后也生效，在禁用swap后还需修改配置文件/etc/fstab，注释swap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># sed -i.bak &#x27;/swap/s/^/#/&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><h2 id="4-内核参数修改"><a href="#4-内核参数修改" class="headerlink" title="4. 内核参数修改"></a>4. 内核参数修改</h2><h3 id="4-1-临时修改"><a href="#4-1-临时修改" class="headerlink" title="4.1 临时修改"></a>4.1 临时修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># sysctl net.bridge.bridge-nf-call-iptables=1</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">[root@master ~]<span class="comment"># sysctl net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br></pre></td></tr></table></figure><h3 id="4-2-永久修改"><a href="#4-2-永久修改" class="headerlink" title="4.2 永久修改"></a>4.2 永久修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat &lt;  /etc/sysctl.d/k8s.conf</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">[root@master ~]<span class="comment"># sysctl -p /etc/sysctl.d/k8s.conf</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncolm17j30hr02nt9d.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubeadm_11"></p><h2 id="5-修改Cgroup-Driver"><a href="#5-修改Cgroup-Driver" class="headerlink" title="5. 修改Cgroup Driver"></a>5. 修改Cgroup Driver</h2><h3 id="5-1-修改daemon-json"><a href="#5-1-修改daemon-json" class="headerlink" title="5.1 修改daemon.json"></a>5.1 修改daemon.json</h3><p>修改daemon.json，新增‘“exec-opts”: [“native.cgroupdriver=systemd”’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># more /etc/docker/daemon.json </span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://v16stybc.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-重新加载docker"><a href="#5-2-重新加载docker" class="headerlink" title="5.2 重新加载docker"></a>5.2 重新加载docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure><p>修改cgroupdriver是为了消除告警：<br>[WARNING IsDockerSystemdCheck]: detected “cgroupfs” as the Docker cgroup driver. The recommended driver is “systemd”. Please follow the guide at <a href="https://kubernetes.io/docs/setup/cri/"> https://kubernetes.io/docs/setup/cri/</a></p><h2 id="6-设置kubernetes源"><a href="#6-设置kubernetes源" class="headerlink" title="6. 设置kubernetes源"></a>6. 设置kubernetes源</h2><h3 id="6-1-新增kubernetes源"><a href="#6-1-新增kubernetes源" class="headerlink" title="6.1 新增kubernetes源"></a>6.1 新增kubernetes源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><ul><li>[] 中括号中的是repository id，唯一，用来标识不同仓库</li><li>name 仓库名称，自定义</li><li>baseurl 仓库地址</li><li>enable 是否启用该仓库，默认为1表示启用</li><li>gpgcheck 是否验证从该仓库获得程序包的合法性，1为验证</li><li>repo_gpgcheck 是否验证元数据的合法性 元数据就是程序包列表，1为验证</li><li>gpgkey=URL 数字签名的公钥文件所在位置，如果gpgcheck值为1，此处就需要指定gpgkey文件的位置，如果gpgcheck值为0就不需要此项了</li></ul></blockquote><h3 id="6-2-更新缓存"><a href="#6-2-更新缓存" class="headerlink" title="6.2 更新缓存"></a>6.2 更新缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@master ~]<span class="comment"># yum -y makecache</span></span><br></pre></td></tr></table></figure><h1 id="三、Master节点安装"><a href="#三、Master节点安装" class="headerlink" title="三、Master节点安装"></a>三、Master节点安装</h1><h2 id="1-版本查看"><a href="#1-版本查看" class="headerlink" title="1. 版本查看"></a>1. 版本查看</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># yum list kubelet --showduplicates | sort -r </span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncph1nuj30mo0p8115.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_12"><br>目前最新版是1.14.2，该版本支持的docker版本为1.13.1, 17.03, 17.06, 17.09, 18.06, 18.09。</p><h2 id="2-安装kubelet、kubeadm和kubectl"><a href="#2-安装kubelet、kubeadm和kubectl" class="headerlink" title="2. 安装kubelet、kubeadm和kubectl"></a>2. 安装kubelet、kubeadm和kubectl</h2><h3 id="2-1-安装三个包"><a href="#2-1-安装三个包" class="headerlink" title="2.1 安装三个包"></a>2.1 安装三个包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># yum install -y kubelet-1.18.14 kubeadm-1.18.14 kubectl-1.18.14</span></span><br></pre></td></tr></table></figure><p>若不指定版本直接运行‘yum install -y kubelet kubeadm kubectl’则默认安装最新版即1.18.14,两种方式结果一致。</p><h3 id="2-2-安装包说明"><a href="#2-2-安装包说明" class="headerlink" title="2.2 安装包说明"></a>2.2 安装包说明</h3><blockquote><ul><li>kubelet 运行在集群所有节点上，用于启动Pod和容器等对象的工具</li><li>kubeadm 用于初始化集群，启动集群的命令工具</li><li>kubectl 用于和集群通信的命令行，通过kubectl可以部署和管理应用，查看各种资源，创建、删除和更新各种组件</li></ul></blockquote><h3 id="2-3-启动kubelet"><a href="#2-3-启动kubelet" class="headerlink" title="2.3 启动kubelet"></a>2.3 启动kubelet</h3><p>启动kubelet并设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># systemctl enable kubelet &amp;&amp; systemctl start kubelet</span></span><br></pre></td></tr></table></figure><h3 id="2-4-kubelet命令补全"><a href="#2-4-kubelet命令补全" class="headerlink" title="2.4 kubelet命令补全"></a>2.4 kubelet命令补全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bash_profile</span></span><br><span class="line">[root@master ~]<span class="comment"># source ~/.bash_profile </span></span><br></pre></td></tr></table></figure><h2 id="3-下载镜像"><a href="#3-下载镜像" class="headerlink" title="3. 下载镜像"></a>3. 下载镜像</h2><h3 id="3-1-镜像下载的脚本（只安装在master上）"><a href="#3-1-镜像下载的脚本（只安装在master上）" class="headerlink" title="3.1 镜像下载的脚本（只安装在master上）"></a>3.1 镜像下载的脚本（只安装在master上）</h3><p>Kubernetes几乎所有的安装组件和Docker镜像都放在goolge自己的网站上,直接访问可能会有网络问题，这里的解决办法是从阿里云镜像仓库下载镜像，拉取到本地以后改回默认的镜像tag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># more image.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">url=registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class="line">version=v1.18.14</span><br><span class="line">images=(`kubeadm config images list --kubernetes-version=<span class="variable">$version</span>|awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`)</span><br><span class="line"><span class="keyword">for</span> imagename <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span> ; <span class="keyword">do</span></span><br><span class="line">  docker pull <span class="variable">$url</span>/<span class="variable">$imagename</span></span><br><span class="line">  docker tag <span class="variable">$url</span>/<span class="variable">$imagename</span> k8s.gcr.io/<span class="variable">$imagename</span></span><br><span class="line">  docker rmi -f <span class="variable">$url</span>/<span class="variable">$imagename</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>url为阿里云镜像仓库地址，version为安装的kubernetes版本。</p><h3 id="3-2-下载镜像"><a href="#3-2-下载镜像" class="headerlink" title="3.2 下载镜像"></a>3.2 下载镜像</h3><p>运行脚本image.sh，下载指定版本的镜像，运行脚本前先赋权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># chmod u+x image.sh</span></span><br><span class="line">[root@master ~]<span class="comment"># ./image.sh</span></span><br><span class="line">[root@master ~]<span class="comment"># docker images</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncrth6zj30zo0pt19i.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_centos7.6_13"></p><h2 id="4-初始化Master"><a href="#4-初始化Master" class="headerlink" title="4. 初始化Master"></a>4. 初始化Master</h2><h3 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a>4.1 初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubeadm init --apiserver-advertise-address 172.27.9.131 --pod-network-cidr=10.244.0.0/16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果显示已存在或较新，可加上版本号和镜像站点，这样下载速度更快</span></span><br><span class="line"><span class="comment">#sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.31.46 --kubernetes-version=v1.18.14 --image-repository registry.aliyuncs.com/google_containers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果端口被占用，可使用以下命令</span></span><br><span class="line"><span class="comment">#kubeadm reset</span></span><br></pre></td></tr></table></figure><p>apiserver-advertise-address指定master的interface，pod-network-cidr指定Pod网络的范围，这里使用flannel网络方案。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncs9p39j31g30pu7lg.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_dashboard_14"><br>记录kubeadm join的输出，后面需要这个命令将各个节点加入集群中。</p><h3 id="4-2-加载环境变量"><a href="#4-2-加载环境变量" class="headerlink" title="4.2 加载环境变量"></a>4.2 加载环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># echo &quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot; &gt;&gt; ~/.bash_profile</span></span><br><span class="line">[root@master ~]<span class="comment"># source ~/.bash_profile </span></span><br></pre></td></tr></table></figure><p>本文所有操作都在root用户下执行，若为非root用户，则执行如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h2 id="5-安装pod网络"><a href="#5-安装pod网络" class="headerlink" title="5. 安装pod网络"></a>5. 安装pod网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span><br><span class="line"><span class="comment"># 由于网络原因，建议使用以下备用连接</span></span><br><span class="line">[root@master ~]<span class="comment"># kubectl apply -f https://qny.aoarasi.com/kube-flannel.yml</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncm8edtj30u7046q4v.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_dashboard_15"></p><h2 id="6-master节点配置"><a href="#6-master节点配置" class="headerlink" title="6. master节点配置"></a>6. master节点配置</h2><p>taint：污点的意思。如果一个节点被打上了污点，那么pod是不允许运行在这个节点上面的</p><h3 id="6-1-删除master节点默认污点"><a href="#6-1-删除master节点默认污点" class="headerlink" title="6.1 删除master节点默认污点"></a>6.1 删除master节点默认污点</h3><p>默认情况下集群不会在master上调度pod，如果偏想在master上调度Pod，可以执行如下操作：</p><p><strong>查看污点：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl describe node master|grep -i taints</span></span><br><span class="line">Taints:             node-role.kubernetes.io/master:NoSchedule</span><br></pre></td></tr></table></figure><p><strong>删除默认污点：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl taint nodes master node-role.kubernetes.io/master-</span></span><br><span class="line">node/master untainted</span><br></pre></td></tr></table></figure><h3 id="6-2-污点机制"><a href="#6-2-污点机制" class="headerlink" title="6.2 污点机制"></a>6.2 污点机制</h3><p><strong>语法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint node [node] key=value[effect]   </span><br><span class="line">     其中[effect] 可取值: [ NoSchedule | PreferNoSchedule | NoExecute ]</span><br><span class="line">      NoSchedule: 一定不能被调度</span><br><span class="line">      PreferNoSchedule: 尽量不要调度</span><br><span class="line">      NoExecute: 不仅不会调度, 还会驱逐Node上已有的Pod</span><br></pre></td></tr></table></figure><p><strong>打污点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl taint node master key1=value1:NoSchedule</span></span><br><span class="line">node/master tainted</span><br><span class="line">[root@master ~]<span class="comment"># kubectl describe node master|grep -i taints</span></span><br><span class="line">Taints:             key1=value1:NoSchedule</span><br></pre></td></tr></table></figure><p>key为key1，value为value1（value可以为空），effect为NoSchedule表示一定不能被调度</p><p><strong>删除污点：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl taint nodes master  key1-     </span></span><br><span class="line">node/master untainted</span><br><span class="line">[root@master ~]<span class="comment"># kubectl describe node master|grep -i taints</span></span><br><span class="line">Taints:             &lt;none&gt;</span><br></pre></td></tr></table></figure><p>删除指定key所有的effect,‘-’表示移除所有以key1为键的污点</p><h1 id="四、Node节点安装"><a href="#四、Node节点安装" class="headerlink" title="四、Node节点安装"></a>四、Node节点安装</h1><h2 id="1-安装kubelet、kubeadm和kubectl"><a href="#1-安装kubelet、kubeadm和kubectl" class="headerlink" title="1. 安装kubelet、kubeadm和kubectl"></a>1. 安装kubelet、kubeadm和kubectl</h2><p>同master节点</p><h2 id="2-下载镜像"><a href="#2-下载镜像" class="headerlink" title="2. 下载镜像"></a>2. 下载镜像</h2><p>同master节点</p><h2 id="3-加入集群"><a href="#3-加入集群" class="headerlink" title="3. 加入集群"></a>3. 加入集群</h2><p>以下操作master上执行</p><h3 id="3-1-查看令牌"><a href="#3-1-查看令牌" class="headerlink" title="3.1 查看令牌"></a>3.1 查看令牌</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubeadm token list</span></span><br><span class="line">TOKEN                     TTL         EXPIRES                     USAGES                   DESCRIPTION                                                EXTRA GROUPS</span><br><span class="line">j5eoyz.zu0x6su7wzh752b3   &lt;invalid&gt;   2019-06-04T17:40:41+08:00   authentication,signing   The default bootstrap token generated by <span class="string">&#x27;kubeadm init&#x27;</span>.   system:bootstrappers:kubeadm:default-node-token</span><br></pre></td></tr></table></figure><p>发现之前初始化时的令牌已过期</p><h3 id="3-2-生成新的令牌"><a href="#3-2-生成新的令牌" class="headerlink" title="3.2 生成新的令牌"></a>3.2 生成新的令牌</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubeadm token create</span></span><br><span class="line">1zl3he.fxgz2pvxa3qkwxln</span><br></pre></td></tr></table></figure><h3 id="3-3-生成新的加密串"><a href="#3-3-生成新的加密串" class="headerlink" title="3.3 生成新的加密串"></a>3.3 生成新的加密串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | \</span></span><br><span class="line">openssl dgst -sha256 -hex | sed <span class="string">&#x27;s/^.* //&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-node节点加入集群"><a href="#3-4-node节点加入集群" class="headerlink" title="3.4 node节点加入集群"></a>3.4 node节点加入集群</h3><p>在node节点上分别执行如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]<span class="comment"># kubeadm join 172.27.9.131:6443 --token 1zl3he.fxgz2pvxa3qkwxln  --discovery-token-ca-cert-hash sha256:5f656ae26b5e7d4641a979cbfdffeb7845cc5962bbfcd1d5435f00a25c02ea50</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncqcgdzj315z05sn0w.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_16"></p><h1 id="五、Dashboard安装"><a href="#五、Dashboard安装" class="headerlink" title="五、Dashboard安装"></a>五、Dashboard安装</h1><h2 id="1-下载yaml"><a href="#1-下载yaml" class="headerlink" title="1. 下载yaml"></a>1. 下载yaml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># wget  https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml</span></span><br><span class="line">1.</span><br></pre></td></tr></table></figure><p>如果连接超时，可以多试几次</p><h2 id="2-配置yaml"><a href="#2-配置yaml" class="headerlink" title="2. 配置yaml"></a>2. 配置yaml</h2><h3 id="2-1-修改镜像地址"><a href="#2-1-修改镜像地址" class="headerlink" title="2.1 修改镜像地址"></a>2.1 修改镜像地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/k8s.gcr.io/registry.cn-hangzhou.aliyuncs.com\/kuberneters/g&#x27;</span> kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>由于默认的镜像仓库网络访问不通，故改成阿里镜像</p><h3 id="2-2-外网访问"><a href="#2-2-外网访问" class="headerlink" title="2.2 外网访问"></a>2.2 外网访问</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/targetPort:/a\ \ \ \ \ \ nodePort: 30001\n\ \ type: NodePort&#x27;</span> kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure><p>配置NodePort，外部通过<a href="https://NodeIp:NodePort">https://NodeIp:NodePort</a> 访问Dashboard，此时端口为30001</p><h3 id="2-3-新增管理员帐号"><a href="#2-3-新增管理员帐号" class="headerlink" title="2.3 新增管理员帐号"></a>2.3 新增管理员帐号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; kubernetes-dashboard.yaml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"># ------------------- dashboard-admin ------------------- #</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: ServiceAccount</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: dashboard-admin</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="string">kind: ClusterRoleBinding</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: dashboard-admin</span></span><br><span class="line"><span class="string">subjects:</span></span><br><span class="line"><span class="string">- kind: ServiceAccount</span></span><br><span class="line"><span class="string">  name: dashboard-admin</span></span><br><span class="line"><span class="string">  namespace: kube-system</span></span><br><span class="line"><span class="string">roleRef:</span></span><br><span class="line"><span class="string">  apiGroup: rbac.authorization.k8s.io</span></span><br><span class="line"><span class="string">  kind: ClusterRole</span></span><br><span class="line"><span class="string">  name: cluster-admin</span></span><br><span class="line"><span class="string"> EOF</span> </span><br></pre></td></tr></table></figure><p>创建超级管理员的账号用于登录Dashboard</p><h2 id="3-部署访问"><a href="#3-部署访问" class="headerlink" title="3. 部署访问"></a>3. 部署访问</h2><h3 id="3-1-部署Dashboard"><a href="#3-1-部署Dashboard" class="headerlink" title="3.1 部署Dashboard"></a>3.1 部署Dashboard</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl apply -f kubernetes-dashboard.yaml </span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncmq5mnj30ke04i0up.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_centos7.6_17"></p><h3 id="3-2-状态查看"><a href="#3-2-状态查看" class="headerlink" title="3.2 状态查看"></a>3.2 状态查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get deployment kubernetes-dashboard -n kube-system</span></span><br><span class="line">[root@master ~]<span class="comment"># kubectl get pods -n kube-system -o wide</span></span><br><span class="line">[root@master ~]<span class="comment"># kubectl get services -n kube-system</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncpzyrej30vq097dlj.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubeadm_18"></p><h3 id="3-3-令牌查看"><a href="#3-3-令牌查看" class="headerlink" title="3.3 令牌查看"></a>3.3 令牌查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe secrets -n kube-system dashboard-admin</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncoxmp9j31gm07cjwd.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_v1.4.2_19"><br>令牌为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4ta3Q5eDciLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYzI2MjZiYTUtOTE5Ny0xMWU5LTk2OTQtMDAwYzI5ZDk5YmEzIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.XnBTkkMNQx_hKlTml7B-D1Ip-hp-WFi1mgjgx2E_SHbaRJluLN5qXWLsBAPl1Cgp-IY5ujg9pYePAZL2GDYyjnCaMiFmQsRW-zbNfkyYfPWje8MtCxJqoILTlCxsa5apwWsKdbsW_X8moMC4cM92hApQshn_-x-V7cxydEKuQPrB3PfQ7ReNMM5VCj4rexAh9Qr7I1wEHFa0KX1XaDRiedjWgXFKU7kWX2VQ3vwnfRdpKq_r0vlDSQRVdrMDPT1BHuBaUn8Gz-EdLR3qUy5vlZbzo1UFvxuL2enoZxntHZmnP1vg4552HROeEJhigdtRSbDvxHTEGWT3A67faha-Kg</span><br><span class="line">1.</span><br></pre></td></tr></table></figure><h3 id="3-4-访问"><a href="#3-4-访问" class="headerlink" title="3.4 访问"></a>3.4 访问</h3><p><a href="https://nodeip:30001/"> https://NodeIp:30001</a><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncn5oq8j31hc0rpgpl.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_20"></p><p>请使用火狐浏览器访问<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7nckws1sj31hc0rktc2.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_21"><br>通过令牌方式登录<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncsufhij31hc0rrwjm.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_v1.4.2_22"></p><p>Dashboard提供了可以实现集群管理、工作负载、服务发现和负载均衡、存储、字典配置、日志视图等功能。</p><h1 id="六、集群测试"><a href="#六、集群测试" class="headerlink" title="六、集群测试"></a>六、集群测试</h1><h2 id="1-部署应用"><a href="#1-部署应用" class="headerlink" title="1. 部署应用"></a>1. 部署应用</h2><h3 id="1-1-命令方式"><a href="#1-1-命令方式" class="headerlink" title="1.1 命令方式"></a>1.1 命令方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl run httpd-app --image=httpd --replicas=3</span></span><br><span class="line">kubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.</span><br><span class="line">deployment.apps/httpd-app created</span><br></pre></td></tr></table></figure><p>通过命令行方式部署apache服务</p><h3 id="1-2-配置文件方式"><a href="#1-2-配置文件方式" class="headerlink" title="1.2 配置文件方式"></a>1.2 配置文件方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; nginx.yml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string"># API 版本号</span></span><br><span class="line"><span class="string">apiVersion: apps/v1</span></span><br><span class="line"><span class="string"># 类型，如：Pod/ReplicationController/Deployment/Service/Ingress</span></span><br><span class="line"><span class="string">kind: Deployment</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  # Kind 的名称</span></span><br><span class="line"><span class="string">  name: nginx-app</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  selector:</span></span><br><span class="line"><span class="string">    matchLabels:</span></span><br><span class="line"><span class="string">      # 容器标签的名字，发布 Service 时，selector 需要和这里对应</span></span><br><span class="line"><span class="string">      app: nginx</span></span><br><span class="line"><span class="string">  # 部署的实例数量</span></span><br><span class="line"><span class="string">  replicas: 2</span></span><br><span class="line"><span class="string">  template:</span></span><br><span class="line"><span class="string">    metadata:</span></span><br><span class="line"><span class="string">      labels:</span></span><br><span class="line"><span class="string">        app: nginx</span></span><br><span class="line"><span class="string">    spec:</span></span><br><span class="line"><span class="string">      # 配置容器，数组类型，说明可以配置多个容器</span></span><br><span class="line"><span class="string">      containers:</span></span><br><span class="line"><span class="string">      # 容器名称</span></span><br><span class="line"><span class="string">      - name: nginx</span></span><br><span class="line"><span class="string">        # 容器镜像</span></span><br><span class="line"><span class="string">        image: nginx:1.17</span></span><br><span class="line"><span class="string">        # 只有镜像不存在时，才会进行镜像拉取</span></span><br><span class="line"><span class="string">        imagePullPolicy: IfNotPresent</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">        # Pod 端口</span></span><br><span class="line"><span class="string">        - containerPort: 80</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">[root@master ~]<span class="comment"># kubectl apply -f nginx.yml </span></span><br><span class="line">deployment.extensions/nginx created</span><br></pre></td></tr></table></figure><p>通过配置文件方式部署nginx服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查看语句Pods </span><br><span class="line">kubectl get pods / kubectl get deployment</span><br><span class="line"># 暴露端口</span><br><span class="line">kubectl expose deployment nginx-app --port=80 --type=LoadBalancer</span><br><span class="line"># 查看服务状态</span><br><span class="line">kubectl get services</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7rgajx6wj317g04emy4.jpg" alt="image-20211209183224044"></p><h2 id="2-状态查看"><a href="#2-状态查看" class="headerlink" title="2. 状态查看"></a>2. 状态查看</h2><h3 id="2-1-查看节点状态"><a href="#2-1-查看节点状态" class="headerlink" title="2.1 查看节点状态"></a>2.1 查看节点状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   47h     v1.18.14</span><br><span class="line">node01   Ready    &lt;none&gt;   22h     v1.18.14</span><br><span class="line">node02   Ready    &lt;none&gt;   6h55m   v1.18.14</span><br></pre></td></tr></table></figure><h3 id="2-2-查看pod状态"><a href="#2-2-查看pod状态" class="headerlink" title="2.2 查看pod状态"></a>2.2 查看pod状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get pod --all-namespaces</span></span><br><span class="line">NAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">default       httpd-app-6df58645c6-42zmc       1/1     Running   0          176m</span><br><span class="line">default       httpd-app-6df58645c6-g6bkc       1/1     Running   0          176m</span><br><span class="line">default       httpd-app-6df58645c6-kp8tl       1/1     Running   0          176m</span><br><span class="line">default       nginx-9d4cf4f77-dft2f            1/1     Running   0          18m</span><br><span class="line">default       nginx-9d4cf4f77-dztxq            1/1     Running   0          18m</span><br><span class="line">default       nginx-9d4cf4f77-l9gdh            1/1     Running   0          18m</span><br><span class="line">kube-system   coredns-fb8b8dccf-bxvrz          1/1     Running   1          47h</span><br><span class="line">kube-system   coredns-fb8b8dccf-mqvd8          1/1     Running   1          47h</span><br><span class="line">kube-system   etcd-master                      1/1     Running   3          47h</span><br><span class="line">kube-system   kube-apiserver-master            1/1     Running   3          47h</span><br><span class="line">kube-system   kube-controller-manager-master   1/1     Running   4          47h</span><br><span class="line">kube-system   kube-flannel-ds-amd64-lkh5n      1/1     Running   0          6h55m</span><br><span class="line">kube-system   kube-flannel-ds-amd64-pv5ll      1/1     Running   1          24h</span><br><span class="line">kube-system   kube-flannel-ds-amd64-wnn5g      1/1     Running   1          22h</span><br><span class="line">kube-system   kube-proxy-42vb5                 1/1     Running   3          47h</span><br><span class="line">kube-system   kube-proxy-7nrfk                 1/1     Running   0          6h55m</span><br><span class="line">kube-system   kube-proxy-x7dmk                 1/1     Running   1          22h</span><br><span class="line">kube-system   kube-scheduler-master            1/1     Running   4          47h</span><br></pre></td></tr></table></figure><h3 id="2-3-查看副本数"><a href="#2-3-查看副本数" class="headerlink" title="2.3 查看副本数"></a>2.3 查看副本数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get deployments</span></span><br><span class="line">NAME        READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">httpd-app   3/3     3            3           178m</span><br><span class="line">nginx       3/3     3            3           19m</span><br><span class="line">[root@master ~]<span class="comment"># kubectl get pod -o wide</span></span><br><span class="line">NAME                         READY   STATUS    RESTARTS   AGE    IP           NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">httpd-app-6df58645c6-42zmc   1/1     Running   0          179m   10.244.0.6   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">httpd-app-6df58645c6-g6bkc   1/1     Running   0          179m   10.244.1.2   node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">httpd-app-6df58645c6-kp8tl   1/1     Running   0          179m   10.244.2.2   node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-9d4cf4f77-dft2f        1/1     Running   0          20m    10.244.0.7   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-9d4cf4f77-dztxq        1/1     Running   0          20m    10.244.2.3   node02   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">nginx-9d4cf4f77-l9gdh        1/1     Running   0          20m    10.244.1.3   node01   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">[root@master ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>可以看到nginx和httpd的3个副本pod均匀分布在3个节点上</p><h3 id="2-4-查看deployment详细信息"><a href="#2-4-查看deployment详细信息" class="headerlink" title="2.4 查看deployment详细信息"></a>2.4 查看deployment详细信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl describe deployments</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7ncrb891j312c0muagk.jpg" alt="k8s实践(一)：Centos7.6部署k8s(v1.14.2)集群_kubernetes_23"></p><h3 id="2-5-查看集群基本组件状态"><a href="#2-5-查看集群基本组件状态" class="headerlink" title="2.5 查看集群基本组件状态"></a>2.5 查看集群基本组件状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># kubectl get cs</span></span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">scheduler            Healthy   ok                  </span><br><span class="line">controller-manager   Healthy   ok                  </span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">&quot;health&quot;</span>:<span class="string">&quot;true&quot;</span>&#125;   </span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7qv674epj31lc064myw.jpg" alt="image-20211209181203749"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 如果是以下的错误</span><br><span class="line">cd /etc/kubernetes/manifests</span><br><span class="line">然后将你的 kube-controller-manager.yaml  kube-scheduler.yaml中都port=0注释掉</span><br></pre></td></tr></table></figure><p>至此完成Centos7.6下k8s(v1.18.14)集群部署。</p><p><strong>k8s主备高可用部署详见：</strong><a href="https://blog.51cto.com/3241766/2463125"> Centos7.6部署k8s v1.16.4高可用集群(主备模式)</a><br><strong>k8s集群高可用部署详见：</strong><a href="https://blog.51cto.com/3241766/2467865"> lvs+keepalived部署k8s v1.16.4高可用集群</a></p><p>本文所有脚本和配置文件已上传github：<a href="https://github.com/loong576/Centos7.6-install-k8s-v1.14.2-cluster.git"> https://github.com/loong576/Centos7.6-install-k8s-v1.14.2-cluster.git</a></p><p>本文参考：<br>1.<a href="https://docs.docker.com/install/linux/docker-ce/centos%EF%BC%9B"> https://docs.docker.com/install/linux/docker-ce/centos；</a><br>2.<a href="https://kubernetes.io/docs/setup/independent/install-kubeadm%EF%BC%9B"> https://kubernetes.io/docs/setup/independent/install-kubeadm；</a><br>3.<a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm%EF%BC%9B"> https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm；</a><br>4.<a href="https://github.com/coreos/flannel%EF%BC%9B"> https://github.com/coreos/flannel；</a><br>5.<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.14.md#external-dependencies;"> https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.14.md#external-dependencies;</a><br>6.[ <a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/%EF%BC%9B]">https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/；]</a>(</p>]]></content>
      
      
      <categories>
          
          <category> Linux涨姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8S </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二、MySQL配置主从复制，主主复制</title>
      <link href="/mysql2/02e821ee51c5/"/>
      <url>/mysql2/02e821ee51c5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-配置主服务器"><a href="#1-配置主服务器" class="headerlink" title="1.配置主服务器"></a>1.配置主服务器</h1><h2 id="1-1配置主服务器的-my-cnf"><a href="#1-1配置主服务器的-my-cnf" class="headerlink" title="1.1配置主服务器的 my.cnf"></a>1.1配置主服务器的 my.cnf</h2><p>添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">## 同一局域网内注意要唯一</span><br><span class="line">server-id=1</span><br><span class="line">## 开启二进制日志功能，可以随便取（关键）</span><br><span class="line">log-bin=mysql-bin</span><br></pre></td></tr></table></figure><p>如果你是使用我上面那种方式启动的MySql，那么你只需要去你相关联的宿主机的配置文件夹里面去建立一个 my.cnf 然后写入上面的类容就好了。</p><p>比如：我的启动命令如下（不应该换行的，这里为了方便查看，我给它分行了）</p><p>那么我只需要在 /docker/mysql_master/conf 这个目录下创建 my.cnf 文件就好了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 12345:3306 \</span><br><span class="line">--name mysql_master \</span><br><span class="line">-v /docker/mysql_master/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /docker/mysql_master/logs:/logs \</span><br><span class="line">-v /docker/mysql_master/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-d mysql:5.7 \</span><br></pre></td></tr></table></figure><h2 id="1-2：重启服务"><a href="#1-2：重启服务" class="headerlink" title="1.2：重启服务"></a>1.2：重启服务</h2><p>这个命令是需要在容器里面执行的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>docker重启mysql会关闭容器，我们需要重启容器。</p><h2 id="1-3：查看-skip-networking-的状态"><a href="#1-3：查看-skip-networking-的状态" class="headerlink" title="1.3：查看 skip_networking 的状态"></a>1.3：查看 skip_networking 的状态</h2><p>确保在主服务器上 skip_networking 选项处于 OFF 关闭状态, 这是默认值。<br>如果是启用的，则从站无法与主站通信，并且复制失败。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;%skip_networking%&#x27;;</span><br><span class="line">+-----------------+-------+</span><br><span class="line">| Variable_name   | Value |</span><br><span class="line">+-----------------+-------+</span><br><span class="line">| skip_networking | OFF   |</span><br><span class="line">+-----------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="1-4：创建一个专门用来复制的用户"><a href="#1-4：创建一个专门用来复制的用户" class="headerlink" title="1.4：创建一个专门用来复制的用户"></a>1.4：创建一个专门用来复制的用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#x27;repl&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">GRANT REPLICATION SLAVE ON *.*  TO  &#x27;repl&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><h1 id="2-配置从服务器"><a href="#2-配置从服务器" class="headerlink" title="2.配置从服务器"></a>2.配置从服务器</h1><h2 id="2-1：配置从服务器的-my-cnf-和上面一致"><a href="#2-1：配置从服务器的-my-cnf-和上面一致" class="headerlink" title="2.1：配置从服务器的 my.cnf (和上面一致)"></a>2.1：配置从服务器的 my.cnf (和上面一致)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id=2</span><br></pre></td></tr></table></figure><p>我的命令如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 12346:3306 \</span><br><span class="line">--name mysql_from \</span><br><span class="line">-v /docker/mysql_from/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /docker/mysql_from/logs:/logs \</span><br><span class="line">-v /docker/mysql_from/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-d mysql:5.7 </span><br></pre></td></tr></table></figure><h2 id="2-2：重启-从服务器-和上面一致"><a href="#2-2：重启-从服务器-和上面一致" class="headerlink" title="2.2：重启 从服务器 (和上面一致)"></a>2.2：重启 从服务器 (和上面一致)</h2><h2 id="2-3：配置连接到主服务器的相关信息"><a href="#2-3：配置连接到主服务器的相关信息" class="headerlink" title="2.3：配置连接到主服务器的相关信息"></a>2.3：配置连接到主服务器的相关信息</h2><p>在从服务器配置连接到主服务器的相关信息 （在容器里面的mysql执行）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  CHANGE MASTER TO MASTER_HOST=&#x27;xxxxx&#x27;, MASTER_PORT=3306,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p>上面代码的xxxxx你需要换成你的IP，docker 查看容器 IP 的命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format=’&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;’ 容器名称/容器id</span><br></pre></td></tr></table></figure><p>启动的那个从服务器的线程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">2-2-4：查看同步状态</span><br><span class="line">mysql&gt;  show slave status \G;</span><br></pre></td></tr></table></figure><h2 id="2-4：测试"><a href="#2-4：测试" class="headerlink" title="2.4：测试"></a>2.4：测试</h2><p>测试的话，你可以在主服务器里面，创建一个数据库，发现从服务器里面也有了，就成功了。</p><h1 id="3-其它"><a href="#3-其它" class="headerlink" title="3.其它"></a>3.其它</h1><h2 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h2><p>如果你还想要一个从服务器，那么你只需要按照上面配置从服务器再配置一个就行了，新建的从服务器，会自动保存主服务器之前的数据。（测试结果）<br>如果你上面的主从复制搞定了，那么这个主主复制就很简单了。我们把上面的从服务器也改成主服务器</p><p>1）、修改上面的从服务器的my.cnf文件，和主服务器的一样（注意这个server-id不能一样）然后重启服务器<br>2）、在从服务器里面创建一个复制用户创建命令一样（这里修改一下用户名可以改为 repl2）<br>3）、在之前的主服务器里面运行下面这个代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO MASTER_HOST=&#x27;xxxx&#x27;, MASTER_PORT=3306,MASTER_USER=&#x27;repl2&#x27;,MASTER_PASSWORD=&#x27;123456&#x27;;</span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><h1 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h1><p>上面主要是教你怎么搭建一个MySql集群，但是这里面还有很多其它的问题。也是我在学习过程中思考的问题，可能有的小伙伴上来看到文章长篇大论的看不下去，只想去实现这样一直集群功能，所以我就把问题写在下面了。</p><p>1）、MySQL的replication和pxc<br>MySql的集群方案有replication和pxc两种，上面是基于replication实现的。</p><p>replication: 异步复制，速度快，无法保证数据的一致性。<br>pxc: 同步复制，速度慢，多个集群之间是事务提交的数据一致性强。</p><p>2）、MySQL的replication数据同步的原理<br>我们在配置的时候开启了它的二进制日志，每次操作数据库的时候都会更新到这个日志里面去。主从通过同步这个日志来保证数据的一致性。</p><p>3）、可否不同步全部的数据<br>可以配置，同步哪些数据库，甚至是哪些表。</p><p>4）、怎么关闭和开始同步</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; STOP SLAVE;</span><br><span class="line"></span><br><span class="line">mysql&gt; START SLAVE;</span><br></pre></td></tr></table></figure><p>5）、我就我的理解画出了，主从、主从从、主主、复制的图。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gx7my6lhtqj310v0i1mxl.jpg" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Linux涨姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、Docker安装MySql并启动</title>
      <link href="/mysql1/b74487a2931f/"/>
      <url>/mysql1/b74487a2931f/</url>
      
        <content type="html"><![CDATA[<p>Docker安装MySql并启动</p><p>一、安装Docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用一键脚本</span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>二、拉取MySql镜像<br>拉取最新版的MySql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure><p>也可以去下面的网址拉取你想要的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hub.docker.com/_/mysql?tab=tags</span><br></pre></td></tr></table></figure><p>拉取完成后我们看一下我们的镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>三、启动<br>复制下面的命令不要换行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 12345:3306 \</span><br><span class="line">--name mysql \</span><br><span class="line">-v /docker/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /docker/mysql/logs:/logs \</span><br><span class="line">-v /docker/mysql/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-d mysql:5.7 \</span><br></pre></td></tr></table></figure><p>我们可以通过下面的命令登录进去这个MySql<br>1、获取容器的ID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>2、进入容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 把容器id替换成你自己的</span><br><span class="line">docker exec -it 787c2527480c /bin/bash</span><br></pre></td></tr></table></figure><p>3、输入用户名密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux涨姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketChat开源聊天应用搭建教程</title>
      <link href="/RocketChat/83f448b54a9a/"/>
      <url>/RocketChat/83f448b54a9a/</url>
      
        <content type="html"><![CDATA[<p>有很多小伙伴都有过搭建一个自己的聊天服务应用的想法，摆脱微信、QQ等第三方应用，更加注重自己的隐私，或更好的存储自己的文件。 </p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai4wkrgj31jk0nkwix.jpg" alt="image"><br>我发现了一款开源的聊天应用RocketChat，能够实现群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频 聊天，截图等等，还支持实时翻译，实现用户之间的自动实时消息转换，使用RocketChat可以完全控制交流通信。  </p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>功能听起来还不错，我们一起来搭建一下，我这里使用以下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基础环境, 我这里用的学生机，大家可以调高一点配置</span></span><br><span class="line">1.CentOS 7.6 1CPU/2G/60G</span><br><span class="line">2.开放公网3000端口</span><br></pre></td></tr></table></figure><p>另外需要搭建起docker运行环境，在之前的教程中有讲过使用一键脚本，如果不清楚可以翻看前面的教程。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mx ~]# docker -v</span><br><span class="line">Docker version 20.10.9, build c2ea9bc</span><br><span class="line">[root@mx ~]# </span><br></pre></td></tr></table></figure><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h2 id="部署MongoDB"><a href="#部署MongoDB" class="headerlink" title="部署MongoDB"></a>部署MongoDB</h2><p>首先创建一个自定义网络，用于容器间的相互隔离访问。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这里我创建一个mynet的网络</span></span><br><span class="line">[root@mx ~]# docker network create --subnet=172.18.0.0/16 mynet</span><br><span class="line">e931682423fb3ce386fe8ccff2d4a1207a49de0f6cbb938290aaf94a680d2e33</span><br><span class="line">[root@mx ~]# docker network ls</span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">a187d39a9c31   bridge    bridge    local</span><br><span class="line">a009b92afbec   host      host      local</span><br><span class="line">e931682423fb   mynet     bridge    local</span><br><span class="line">f7101068a933   none      null      local</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai7cdn0j311g0a6jsz.jpg" alt="image"></p><p>RocketChat依赖于MongoDB运行环境，先采用Docker方式部署一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/docker/mongodb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个配置文件</span></span><br><span class="line">vim /opt/docker/mongodb/mongod.conf</span><br></pre></td></tr></table></figure><p>下面是mongod.conf的内容，请粘贴到文件中, 然后使用esc和:x保存退出。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mongod.conf</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> documentation of all options, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Where and how to store data.</span></span><br><span class="line">storage:</span><br><span class="line">  dbPath: /data/db</span><br><span class="line">  journal:</span><br><span class="line">    enabled: true</span><br><span class="line"><span class="meta">#</span><span class="bash">  engine:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  mmapv1:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  wiredTiger:</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> network interfaces</span></span><br><span class="line">net:</span><br><span class="line">  port: 27017</span><br><span class="line">  bindIp: 127.0.0.1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> how the process runs</span></span><br><span class="line">processManagement:</span><br><span class="line">  timeZoneInfo: /usr/share/zoneinfo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">security:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  authorization: <span class="string">&quot;enabled&quot;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">operationProfiling:</span></span><br><span class="line"></span><br><span class="line">replication:</span><br><span class="line">  replSetName: &quot;rs01&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">sharding:</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Enterprise-Only Options:</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">auditLog:</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">snmp:</span></span><br></pre></td></tr></table></figure><p>使用以下命令创建运行镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-itd \</span><br><span class="line">-e PGID=1000 \</span><br><span class="line">-e PUID=1000 \</span><br><span class="line">--name=MongoDB \</span><br><span class="line">--net=mynet \</span><br><span class="line">--ip=172.18.0.2 \</span><br><span class="line">-e TZ=Asia/Shanghai \</span><br><span class="line">-p 27017:27017/tcp \</span><br><span class="line">-v /opt/docker/mongodb/:/data/db:rw \</span><br><span class="line">--hostname mongodatabase mongo \</span><br><span class="line">-f /data/db/mongod.conf</span><br></pre></td></tr></table></figure><p>由于docker的镜像服务器在国外，所以下载较慢，如果遇到以下类似的错误，请多试几遍。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai6rz1wj31sd0u0jy0.jpg" alt="image"><br>使用命令查看运行状态，如果没有其它报错则安装正常。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看正在运行的容器</span></span><br><span class="line">docker ps </span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai5c6gvj31ue0oy43u.jpg" alt="image"></p><h2 id="配置MongoDB"><a href="#配置MongoDB" class="headerlink" title="配置MongoDB"></a>配置MongoDB</h2><p>我们需要对MongoDB进行一系列的配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入到容器内部</span></span><br><span class="line">[root@mx ~]# docker exec -it MongoDB bash</span><br><span class="line">root@mongodatabase:/# </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器内部进入mongodb</span></span><br><span class="line">root@mongodatabase:/# mongo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用以下命令，注意括号</span></span><br><span class="line">mongodatabase:SECONDARY&gt; rs.initiate()</span><br><span class="line">&#123;</span><br><span class="line">        &quot;ok&quot; : 0,</span><br><span class="line">        &quot;errmsg&quot; : &quot;already initialized&quot;,</span><br><span class="line">        &quot;code&quot; : 23,</span><br><span class="line">        &quot;codeName&quot; : &quot;AlreadyInitialized&quot;,</span><br><span class="line">        &quot;$clusterTime&quot; : &#123;</span><br><span class="line">                &quot;clusterTime&quot; : Timestamp(1635072585, 2),</span><br><span class="line">                &quot;signature&quot; : &#123;</span><br><span class="line">                        &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</span><br><span class="line">                        &quot;keyId&quot; : NumberLong(0)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;operationTime&quot; : Timestamp(1635072585, 2)</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用管理员操作数据库</span></span><br><span class="line">mongodatabase:PRIMARY&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line">mongodatabase:PRIMARY&gt; </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建管理员和rocketchat数据库, 这里我把密码都修改为admin123，大家可对应修改</span></span><br><span class="line">db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;admin123&quot;,roles: [&#123; role: &quot;root&quot;, db: &quot;admin&quot;&#125;]&#125;)</span><br><span class="line">db.createUser(&#123;user: &quot;rocketchat&quot;,pwd: &quot;admin123&quot;,roles: [&#123;role: &quot;readWrite&quot;, db: &quot;local&quot; &#125;]&#125;)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换用户</span></span><br><span class="line">use rocketchat</span><br><span class="line">db.createUser(&#123;user: &quot;rocketchat&quot;,pwd: &quot;admin123&quot;,roles: [&#123;role: &quot;dbOwner&quot;,db: &quot;rocketchat&quot; &#125;]&#125;)</span><br></pre></td></tr></table></figure><p>如果你的操作结果与我类似，那么恭喜你创建成功。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai417amj31pa0qiad1.jpg" alt="image"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 退出</span><br><span class="line">exit</span><br><span class="line">openssl rand -base64 90 &gt; /data/db/mongo.keyfile &amp;&amp; chmod 400 /data/db/mongo.keyfile</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>使用exit退出mongodb和容器，我们修改一个配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop MongoDB</span><br><span class="line">vim /opt/docker/mongodb/mongod.conf </span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai3mul7j31r30u0whv.jpg" alt="image"><br>将24-25行前的注释取消掉，并添加为下面的样子,保存后重启mongodb。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">security:</span><br><span class="line">  keyFile: /data/db/mongo.keyfile</span><br><span class="line">  authorization: &quot;enabled&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">docker start MongoDB</span><br></pre></td></tr></table></figure><h1 id="部署RocketChat"><a href="#部署RocketChat" class="headerlink" title="部署RocketChat"></a>部署RocketChat</h1><p>使用下面的命令部署镜像，如果下载较慢或超时可以多试几次。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-itd \</span><br><span class="line">-e PGID=1000 \</span><br><span class="line">-e PUID=1000 \</span><br><span class="line">--name=RocketChat \</span><br><span class="line">--net=mynet \</span><br><span class="line">--ip=172.18.0.3 \</span><br><span class="line">-e TZ=Asia/Shanghai \</span><br><span class="line">-e MONGO_URL=mongodb://rocketchat:admin123@172.18.0.2:27017/rocketchat \</span><br><span class="line">-e MONGO_OPLOG_URL=mongodb://rocketchat:admin123@172.18.0.2:27017/local?authSource=admin \</span><br><span class="line">-p 3000:3000/tcp \</span><br><span class="line">-v /opt/docker/rocketchat:/app/uploads:rw library/rocket.chat:4.0.3</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai83t3ij31v80ew42n.jpg" alt="image"><br>关闭防火墙，或放行3000TCP端口，使用网页来访问，地址为IP:3000(如果你是公网服务器，请使用你的公网地址)。配置一下基本信息，一直继续到配置结束。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai64vezj31gl0u0q5j.jpg" alt="image"><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai7oqbtj31jk0qzwh2.jpg" alt="image"><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai8mlnej31jk0rpmyh.jpg" alt="image"><br>最后就可以愉快地玩耍了，发个表情试试~  </p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>安装成功后，可以使用ssl证书将网站加密，可以更加的安全。而且使用客户端连接到私有服务器时，http协议不会被连接。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwzai4hmlij30u01cqgnf.jpg" alt="image"><br>如果你安装时遇到有问题，无法继续下去，可以私信联系我获得帮助（可提供shell一键脚本)。<br>客户端获取请回复关键字「111」。</p>]]></content>
      
      
      <categories>
          
          <category> 好玩的项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RocketChat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>由吉他手开发的Linux发行版？ Arch Linux最新上手安装教程（图文）</title>
      <link href="/ArchLinux1/c132d211f4bd/"/>
      <url>/ArchLinux1/c132d211f4bd/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>Arch Linux是一款基于x86-64架构的Linux发行版。系统主要由自由和开源软件组成，支持社区参与。系统设计以KISS原则（保持简单和愚蠢）为总体指导原则，注重代码正确、优雅和极简主义，期待用户能够愿意去理解系统的操作。</p><p>据介绍，最初是由加拿大程序员兼吉他手Judd Vinet于2002年发布0.1版。<br><img src="https://files.mdnice.com/user/14935/354f20c7-473a-43ec-9cf0-2128bd74b423.png" alt="image"><br>相传，Arch Linux不像其它Linux发行版一样有完善的GUI安装环境，用户只需要一直下一步就能安装成功，而是采用传统字符命令模式，需要手动的配置各个系统变量，达到安装目的。</p><p>这种设计模式无疑给想要上手Arch Linux的用户增加了一个门槛，但是其优雅的外表却又不断吸引人们尝试体验。</p><p><img src="https://files.mdnice.com/user/14935/303c5607-5dac-40e0-acfb-b9b0bc45af42.jpg" alt="image"></p><p>接下来我们整个安装尝试一下。</p><h1 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h1><ul><li>Arch Linux ISO镜像</li><li>系统U盘（虚拟机用户可不用）</li><li>烧写软件</li></ul><p>首先Arch Linux ISO镜像可到官方网站下载，烧写软件可使用软碟通或balenaEtcher。<br><img src="https://files.mdnice.com/user/14935/4d97cf08-54b7-430a-a55f-dca307b6bc52.png" alt="image"><br>就是下面这款软件，准备好后进行下一步。<br><img src="https://files.mdnice.com/user/14935/aea93932-279f-422d-bbab-a11db07b8bff.png" alt="image"><br>烧写过程和BIOS设置教程网络上已经有很多教程，故不再赘述。本次演示关键部分，为了方便截图，我这里使用虚拟机演示，实体机操作雷同。</p><h1 id="2-加载启动"><a href="#2-加载启动" class="headerlink" title="2.加载启动"></a>2.加载启动</h1><p>当正常地使用镜像启动后，会看到系统的启动菜单，默认第一项目。<br><img src="https://files.mdnice.com/user/14935/0272cfc7-9e5c-4d45-8770-75fa75e5f891.png" alt="image"><br>一会儿便进入到系统配置字符界面。<br><img src="https://files.mdnice.com/user/14935/6ba3b7b0-b8a9-471b-8099-bff88a89c0ab.png" alt="image"></p><h2 id="2-1设置网络"><a href="#2-1设置网络" class="headerlink" title="2.1设置网络"></a>2.1设置网络</h2><p>使用有线网络连接，系统会自动获取ip地址，可以使用以下命令查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip a s</span><br><span class="line"></span><br><span class="line"># 测试能否访问互联网</span><br><span class="line">ping baidu.com</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/a0e922e1-6874-47c8-9fc0-8410bc7512a3.png" alt="image"><br>如果要使用无线网络连接（不推荐），可以使用图中的方式来建立WIFi连接。<br><img src="https://files.mdnice.com/user/14935/72109049-2535-40be-aabc-9baa5234d02c.png" alt="image"><br>确保能够正常的访问互联网，因为后面需要下载软件包。</p><h2 id="2-2-查看系统的引导方式"><a href="#2-2-查看系统的引导方式" class="headerlink" title="2.2 查看系统的引导方式"></a>2.2 查看系统的引导方式</h2><p>需要判断系统是由传统BIOS引导还是UEFI，使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /sys/firewall/efi</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/c9b57a7c-0e81-4349-aa79-532fa4c4cc51.png" alt="image"><br>如果像我这样报错，则没有UEFI引导文件，为传统BIOS。区分这个是为后面设置有细微的不同。</p><h2 id="2-3-设置时间同步"><a href="#2-3-设置时间同步" class="headerlink" title="2.3 设置时间同步"></a>2.3 设置时间同步</h2><p>使用以下命令来启用时间同步，如果状态为yes（如图），表明开启。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># timedatectl set-ntp true</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/4b5302bd-58b8-41df-82ff-6f17539f848d.png" alt="image"></p><h2 id="2-4-建立磁盘分区"><a href="#2-4-建立磁盘分区" class="headerlink" title="2.4 建立磁盘分区"></a>2.4 建立磁盘分区</h2><p>系统如果识别到磁盘，就会将其分配为一个块设备，如 /dev/sda、/dev/nvme0n1 或 /dev/mmcblk0。可以使用 lsblk 或者 fdisk 查看：<br>比如我这里只有一块磁盘/dev/sda，具有50G的磁盘空间。<br><img src="https://files.mdnice.com/user/14935/06a55164-5b8b-47b4-81fa-84b525b80fb1.png" alt="image"><br>根据前面传统BIOS和UEFI的引导不同，磁盘分区也有些许变化,可以参考下图。<br><img src="https://files.mdnice.com/user/14935/c836cbd7-cda3-47a0-a297-e906cfeec22d.png" alt="image"><br>从官方图示来看，传统BIOS需要建立两个分区，UEFI需要建立三个分区。我这里以传统BIOS来演示，UEFI操作类似。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 建立第一个SWAP分区</span><br><span class="line">fdisk /dev/sda</span><br><span class="line">n </span><br><span class="line">p </span><br><span class="line">回车</span><br><span class="line">回车</span><br><span class="line">+1G</span><br><span class="line"></span><br><span class="line"># 建立第二个根分区</span><br><span class="line">n </span><br><span class="line">p </span><br><span class="line">回车</span><br><span class="line">回车</span><br><span class="line">回车</span><br><span class="line">w     # 保存配置，将所有剩下的磁盘空间给根</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/8ec6b468-f4a5-45ae-966b-4fad569b88ca.png" alt="image"><br><img src="https://files.mdnice.com/user/14935/5d0065bc-2c83-4ea2-b4ef-c3ed8fa701f4.png" alt="image"><br>这样磁盘分区就搞定了。<br><img src="https://files.mdnice.com/user/14935/674642b5-eed0-4b83-b155-1c46f7906c2e.png" alt="image"></p><h2 id="2-5-格式化分区"><a href="#2-5-格式化分区" class="headerlink" title="2.5 格式化分区"></a>2.5 格式化分区</h2><p>前面创建的两块分区，在此需要对其进行初始化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 初始化交换分区，并使之生效</span><br><span class="line"># mkswap /dev/sda1</span><br><span class="line"># swapon /dev/sda1</span><br><span class="line"></span><br><span class="line"># 格式化根分区</span><br><span class="line"># mkfs.ext4 /dev/sda2</span><br><span class="line"></span><br><span class="line"># 挂载根</span><br><span class="line"># mount /dev/sda2 /mnt</span><br></pre></td></tr></table></figure><h2 id="2-6-安装必要的软件包"><a href="#2-6-安装必要的软件包" class="headerlink" title="2.6 安装必要的软件包"></a>2.6 安装必要的软件包</h2><p>安装 base 软件包和 Linux 内核以及常规硬件的固件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># pacstrap /mnt base linux linux-firmware</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/83d57ac1-a444-41b1-827a-31ca2caecf44.png" alt="image"></p><h2 id="2-7-配置系统"><a href="#2-7-配置系统" class="headerlink" title="2.7 配置系统"></a>2.7 配置系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line"></span><br><span class="line"># change root到新安装的系统</span><br><span class="line">arch-chroot /mnt</span><br><span class="line"></span><br><span class="line"># 设置时区</span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><p>安装一些系统必要的软件包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacman -S vim </span><br><span class="line">pacman -S grub</span><br></pre></td></tr></table></figure><p>修改/etc/locale.gen，然后取消掉 en_US.UTF-8 UTF-8 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br><span class="line">……</span><br><span class="line">en_US.UTF-8 UTF-8</span><br><span class="line"></span><br><span class="line"># 修改完后执行以下命令</span><br><span class="line">locale-gen</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/d8fc4a43-2881-4cf5-9c98-44d0e7cc630a.png" alt="image"></p><h1 id="3-其他配置"><a href="#3-其他配置" class="headerlink" title="3.其他配置"></a>3.其他配置</h1><p>Initramfs配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/72d05973-3721-43f9-a10b-800dfadb501d.png" alt="image"></p><p>设置好root密码，正式进入系统会用到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><h1 id="4-添加引导"><a href="#4-添加引导" class="headerlink" title="4.添加引导"></a>4.添加引导</h1><p>其中 /dev/sda是要安装 GRUB 的磁盘(不是分区)，比如磁盘 /dev/sda、/dev/nvme0n1或者/dev/mmcblk0，而不是 分区 /dev/sda1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=i386-pc /dev/sda</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/f4d13ebd-c2f4-4f0c-b5b1-2653ade49420.png" alt="image"></p><p>如果是UEFI则用下面的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB</span><br></pre></td></tr></table></figure><p>生成引导文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/14935/979b94b2-cc42-42f0-8260-9adfcdb98995.png" alt="image"></p><p>完成后，退出并取消挂载，重启系统。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">cd / &amp;&amp; umount /mnt</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="5-启动Arch-Linux"><a href="#5-启动Arch-Linux" class="headerlink" title="5.启动Arch Linux"></a>5.启动Arch Linux</h1><p>重启后，看到引导菜单，你就成功了一半。<br><img src="https://files.mdnice.com/user/14935/2993d2c0-05f3-47fb-bdd5-6ce2a9f0d706.png" alt="image"><br>看到字符界面，就安装成功了。<br><img src="https://files.mdnice.com/user/14935/6f6e3515-72f0-45bc-9694-f8f49d40c670.png" alt="image"></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>你用于Arch Linux吗？欢迎留言讨论。下期为Arch Linux安装图形界面。</p>]]></content>
      
      
      <categories>
          
          <category> Linux涨姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArchLinux </tag>
            
            <tag> Linux发行版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连shell的基本输出都不会，还写什么脚本？echo和printf命令总结</title>
      <link href="/shell002/d5cbd103d1c0/"/>
      <url>/shell002/d5cbd103d1c0/</url>
      
        <content type="html"><![CDATA[<p>在 Linux 系统中使用 echo 命令和 printf 命令都可以实现信息的输出功能，下面我们分别看这两个命令的应用案例。  </p><h1 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h1><p>1.使用 echo 命令创建一个脚本文件菜单<br>功能描述：echo 命令主要用来显示字符串信息, 语法格式如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo [选项] 字符串</span><br></pre></td></tr></table></figure><p>比如创建一个简单的菜单展示页面：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo &quot;1.查看网卡信息&quot;</span><br><span class="line">echo &quot;2.查看内存信息&quot;</span><br><span class="line">echo &quot;3.查看磁盘信息&quot;</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>2.echo默认的命令有些单调，默认以黑色字输出、无法居中展示。echo 命令支持-e 选项，使用该选项可以让 echo<br>命令识别\后面的转义符号含义，其中\033 或\e 后面可以跟终<br>端编码，终端编码可以用于定义终端的字体颜色、背景颜色、定位光标等，从而丰富我们的使用体验。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\b 退格键（Backspace）</span><br><span class="line">\f 换行但光标仍停留在原来的位置</span><br><span class="line">\n 换行且光标移至行首</span><br><span class="line">\r 光标移至行首，但不换行</span><br><span class="line">\t 插入Tab键</span><br><span class="line">\\ 打印\</span><br><span class="line">\033或\e 设置终端属性，如字体颜色、背景颜色、定位光标等</span><br></pre></td></tr></table></figure><p>比如用上面的常用地转义符号来演示：</p><h2 id="正常情况"><a href="#正常情况" class="headerlink" title="正常情况"></a>正常情况</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mx ~]# echo &quot;hello world&quot;</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><h2 id="b"><a href="#b" class="headerlink" title="-b"></a>-b</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 退格键（Backspace）</span><br><span class="line">[root@mx ~]# echo -e &quot;hello\bworld&quot;</span><br><span class="line">hellworld</span><br><span class="line">[root@mx ~]# </span><br><span class="line">[root@mx ~]# echo -e &quot;helle\b\bo world&quot;</span><br><span class="line">helo world</span><br></pre></td></tr></table></figure><h2 id="f"><a href="#f" class="headerlink" title="-f"></a>-f</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 换行但光标停留在原来的位置</span><br><span class="line">[root@mx ~]# echo -e &quot;hello\fworld&quot;</span><br><span class="line">hello</span><br><span class="line">     world</span><br><span class="line">[root@mx ~]# </span><br></pre></td></tr></table></figure><h2 id="t"><a href="#t" class="headerlink" title="-t"></a>-t</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 插入Tab键</span><br><span class="line">[root@mx ~]# echo -e &quot;hello\tworld&quot;</span><br><span class="line">hello   world</span><br></pre></td></tr></table></figure><h2 id="设置终端属性"><a href="#设置终端属性" class="headerlink" title="设置终端属性"></a>设置终端属性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@mx ~]# echo -e &quot;\033[1mOK&quot; #加粗显示 OK 后没关闭属性设置</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[1mOK\e[0m&quot; #使用\e 和\033 的效果相同</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[4mOK\e[0m&quot; #加下画线后输出 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[5mOK\e[0m&quot; #闪烁显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[30mOK\e[0m&quot; #黑色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[31mOK\e[0m&quot; #红色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[32mOK\e[0m&quot; #绿色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[33mOK\e[0m&quot; #棕色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[34mOK\e[0m&quot; #蓝色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[35mOK\e[0m&quot; #紫色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[36mOK\e[0m&quot; #蓝绿色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[37mOK\e[0m&quot; #亮灰色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[1;33mOK\e[0m&quot; #亮黄色显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[42mOK\e[0m&quot; #绿色背景显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[44mOK\e[0m&quot; #蓝色背景显示 OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\e[32;44mOK\e[0m&quot; #绿色字体，蓝色背景显示 OK</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwuncw3w9dj318w0u0tdh.jpg" alt="1"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在第3行,10列显示OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\033[3;10HOK&quot;</span><br><span class="line"># 在第3行开头处显示OK</span><br><span class="line">[root@mx ~]# echo -e &quot;\033[3HOK&quot; </span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwuncwpo1qj316y06wdg2.jpg" alt="2"><br>3.用echo编写一个菜单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">clear</span><br><span class="line">echo -e &quot;\033[42m---------------------------------\033[0m&quot;</span><br><span class="line">echo -e &quot;\e[2;10H 这里是菜单\t\t#&quot;</span><br><span class="line">echo -e &quot;#\e[32m 1.查看网卡信息\e[0m #&quot;</span><br><span class="line">echo -e &quot;#\e[33m 2.查看内存信息\e[0m #&quot;</span><br><span class="line">echo -e &quot;#\e[34m 3.查看磁盘信息\e[0m #&quot;</span><br><span class="line">echo -e &quot;#\e[35m 4.查看 CPU 信息\e[0m #&quot;</span><br><span class="line">echo -e &quot;#\e[36m 5.查看账户信息\e[0m #&quot;</span><br><span class="line">echo -e &quot;\033[42m---------------------------------\033[0m&quot;</span><br><span class="line">echo</span><br></pre></td></tr></table></figure><h1 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h1><p>1.除了在Linux下使用上述 echo 命令输入信息，还可以使用 printf 命令实现相同的效果。<br>语法格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printf [格式] 参数</span><br></pre></td></tr></table></figure><p>一般 printf 参数就是要输出的内容，可以搭配的格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">%d或%i 十进制整数</span><br><span class="line">%o 八进制整数</span><br><span class="line">%x 十六进制整数</span><br><span class="line">%u 无符号十进制整数</span><br><span class="line">%f 浮点数（小数点数）</span><br><span class="line">%s 字符串</span><br><span class="line">\b 退格键（Backspace）</span><br><span class="line">\f 换行但光标仍停留在原来的位置</span><br><span class="line">\n 换行且光标移至行首</span><br><span class="line">\r 光标移至行首，但不换行</span><br><span class="line">\t Tab键</span><br></pre></td></tr></table></figure><p>效果演示：</p><h2 id="d或-i-o-x"><a href="#d或-i-o-x" class="headerlink" title="%d或%i  %o  %x"></a>%d或%i  %o  %x</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 以下进制均不带换行符</span><br><span class="line"># 10进制</span><br><span class="line">[root@mx ~]# printf &quot;%d&quot; 12</span><br><span class="line">12[root@mx ~]# </span><br><span class="line"># 在12前空出5个字符</span><br><span class="line">[root@mx ~]# printf &quot;%5d&quot; 12</span><br><span class="line">   12[root@mx ~]# </span><br><span class="line"># 在12后空出5个字符</span><br><span class="line">[root@mx ~]# printf &quot;%-5d&quot; 12</span><br><span class="line">12   [root@mx ~]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 八进制整数</span><br><span class="line">[root@mx ~]# printf &quot;%o&quot; 12</span><br><span class="line">14[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 十六进制整数</span><br><span class="line">[root@mx ~]# printf &quot;%x&quot; 12</span><br><span class="line">c[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 无符号10进制整书，拥有最大值，超过无法打印记</span><br><span class="line">[root@mx ~]# printf &quot;%ud&quot;  9223372036854775808</span><br><span class="line">9223372036854775808d[root@mx ~]# </span><br></pre></td></tr></table></figure><h2 id="n"><a href="#n" class="headerlink" title="\n"></a>\n</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 加上换行</span><br><span class="line">[root@mx ~]# printf &quot;%d\n&quot; 12</span><br><span class="line">12</span><br><span class="line">[root@mx ~]# </span><br></pre></td></tr></table></figure><h2 id="f-1"><a href="#f-1" class="headerlink" title="\f"></a>\f</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 换行后停留在原来的位置上</span><br><span class="line">[root@mx ~]# printf &quot;%d\f&quot; 12</span><br><span class="line">12</span><br><span class="line">  [root@mx ~]# </span><br></pre></td></tr></table></figure><h2 id="f-2"><a href="#f-2" class="headerlink" title="%f"></a>%f</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 打印小数</span><br><span class="line">[root@mx ~]# printf &quot;%f\n&quot; 1.11</span><br><span class="line">1.110000</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 保留小数点后三位</span><br><span class="line">[root@mx ~]# printf &quot;%.3f\n&quot; 1.11</span><br><span class="line">1.110</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 右对齐8个宽度</span><br><span class="line">[root@mx ~]# printf &quot;|%8.3f|\n&quot; 1.11</span><br><span class="line">|   1.110|</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 左对齐8个宽度</span><br><span class="line">[root@mx ~]# printf &quot;|%-8.3f|\n&quot; 1.11</span><br><span class="line">|1.110   |</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="s"><a href="#s" class="headerlink" title="%s"></a>%s</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 打印字符串</span><br><span class="line">[root@mx ~]# printf &quot;%s\n&quot; &quot;hello&quot;</span><br><span class="line">hello</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 右对齐</span><br><span class="line">[root@mx ~]# printf &quot;|%8s|\n&quot; &quot;hello&quot;</span><br><span class="line">|   hello|</span><br><span class="line">[root@mx ~]# </span><br><span class="line"></span><br><span class="line"># 左对齐</span><br><span class="line">[root@mx ~]# printf &quot;|%-8s|\n&quot; &quot;hello&quot;</span><br><span class="line">|hello   |</span><br><span class="line">[root@mx ~]#</span><br></pre></td></tr></table></figure><p>2.用printf编写一个菜单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">clear</span><br><span class="line">printf &quot;\e[42m%s\n\e[0m&quot; &quot;---------------------------------&quot;</span><br><span class="line">printf &quot;\e[2;10H%s\t\t\n&quot; &quot;这里是菜单&quot;</span><br><span class="line">printf &quot;\e[32m%s\e[0m\n&quot; &quot;1.查看网卡信息&quot;</span><br><span class="line">printf &quot;\e[35m%s\e[0m\n&quot; &quot;2.查看内存信息&quot;</span><br><span class="line">printf &quot;\e[36m%s\e[0m\n&quot; &quot;3.查看磁盘信息&quot;</span><br><span class="line">printf &quot;\e[34m%s\e[0m\n&quot; &quot;4.查看 CPU 信息&quot;</span><br><span class="line">printf &quot;\e[33m%s\e[0m\n&quot; &quot;5.查看账户信息&quot;</span><br><span class="line">printf &quot;\e[42m%s\n\e[0m&quot; &quot;---------------------------------&quot;</span><br><span class="line">echo</span><br></pre></td></tr></table></figure><p>欢迎关注评论！</p>]]></content>
      
      
      <categories>
          
          <category> 神奇的脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件分发脚本，只需一条命令将你的文件分发到各个服务器上</title>
      <link href="/shell001/d585266bb763/"/>
      <url>/shell001/d585266bb763/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在运维或在日常工作生活中，我们经常会把一个文件拷贝到其它服务器上，或同时分发到多个服务器上，甚至要求目标机将文件放在相同的路径下，方便程序进一步调用。 </p><p>遇到这种问题，我们通常的做法是使用scp或rsync命令把文件拷贝一个一个地拷贝到多台服务器上，这样做费时费力；大神的做法是使用ansible的playbook一下把事情干完，前提是你得会ansible；快捷的做法就是使用今天的脚本了。</p><h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p>目前拥有4台机器，分别为client、node1、node2和node3，client与其它3台机器能够建立ssh链接。在client的/root/test目录下有a.txt和b.txt两个文件。</p><p><img src="01.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@client test]# ls /root/test/</span><br><span class="line">a.txt  b.txt</span><br><span class="line">[root@client test]# </span><br></pre></td></tr></table></figure><p>我把文件分发到node1、node2和node3的/root/test下，执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在/root/test目录下执行, xrsync是我的脚本</span><br><span class="line">[root@client test]# xrsync a.txt b.txt </span><br></pre></td></tr></table></figure><p>执行分发过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@client test]# xrsync a.txt b.txt </span><br><span class="line">============ node1 ============</span><br><span class="line">sending incremental file list</span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line">sent 93 bytes  received 35 bytes  256.00 bytes/sec</span><br><span class="line">total size is 2  speedup is 0.02</span><br><span class="line">sending incremental file list</span><br><span class="line">b.txt</span><br><span class="line"></span><br><span class="line">sent 93 bytes  received 35 bytes  85.33 bytes/sec</span><br><span class="line">total size is 2  speedup is 0.02</span><br><span class="line">============ node2 ============</span><br><span class="line">sending incremental file list</span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line">sent 93 bytes  received 35 bytes  256.00 bytes/sec</span><br><span class="line">total size is 2  speedup is 0.02</span><br><span class="line">sending incremental file list</span><br><span class="line">b.txt</span><br><span class="line"></span><br><span class="line">sent 93 bytes  received 35 bytes  256.00 bytes/sec</span><br><span class="line">total size is 2  speedup is 0.02</span><br><span class="line">============ node3 ============</span><br><span class="line">sending incremental file list</span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line">sent 93 bytes  received 35 bytes  85.33 bytes/sec</span><br><span class="line">total size is 2  speedup is 0.02</span><br><span class="line">sending incremental file list</span><br><span class="line">b.txt</span><br><span class="line"></span><br><span class="line">sent 93 bytes  received 35 bytes  256.00 bytes/sec</span><br><span class="line">total size is 2  spee</span><br></pre></td></tr></table></figure><p>到node2上看一下，文件果然存在。同样地，node3和node4也同步过去了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># node2上查看</span><br><span class="line">[root@node2 ~]# ls /root/test/</span><br><span class="line">a.txt  b.txt</span><br><span class="line">[root@node2 ~]# </span><br><span class="line"></span><br><span class="line"># node3上查看</span><br><span class="line">[root@node3 ~]# ls /root/test/</span><br><span class="line">a.txt  b.txt</span><br><span class="line">[root@node3 ~]# </span><br><span class="line"></span><br><span class="line"># node4上查看</span><br><span class="line">[root@node4 ~]# ls /root/test/</span><br><span class="line">a.txt  b.txt</span><br><span class="line">[root@node4 ~]# </span><br></pre></td></tr></table></figure><h1 id="脚本奉上"><a href="#脚本奉上" class="headerlink" title="脚本奉上"></a>脚本奉上</h1><p>整个脚本的代码，只需要把其中的node1 node2 node3修改为自己环境下的主机名或ip地址即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 判断参数是否足够</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">echo Not Enounh Arguement!</span><br><span class="line">exit;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 遍历所有的机器</span><br><span class="line">for host in node1 node2 node3</span><br><span class="line">do</span><br><span class="line">echo ============  $host ============</span><br><span class="line">for file in $@</span><br><span class="line">do</span><br><span class="line"># 判断文件是否存在</span><br><span class="line">if [ -e $file ]</span><br><span class="line">then</span><br><span class="line"># 获取父目录</span><br><span class="line">pdir=$(cd -P $(dirname $file); pwd)</span><br><span class="line"></span><br><span class="line"># 获取当前目录的名称</span><br><span class="line">fname=$(basename $file)</span><br><span class="line">ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">rsync -av $pdir/$fname $host:$pdir</span><br><span class="line">else</span><br><span class="line">echo $file does not exists!</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="运行条件"><a href="#运行条件" class="headerlink" title="运行条件"></a>运行条件</h1><p>为了更方便脚本的运行，建议使用如下优化。  </p><p>1.修改/etc/hosts文件，加入IP地址与主机名的对应关系，这样方便我们使用主机名直接操作。比如我演示的机器配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/hosts</span><br><span class="line"># 加入配置，自己的机器对应修改</span><br><span class="line">……</span><br><span class="line">192.168.31.47 client</span><br><span class="line">192.168.31.48 node1</span><br><span class="line">192.168.31.50 node2</span><br><span class="line">192.168.31.51 node3</span><br></pre></td></tr></table></figure><p>2.客户机与目标机之间使用ssh密码验证登录，这样在传输文件时不需要二次验证。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 生成ssh私钥</span><br><span class="line">ssh-keygen -f /root/.ssh/id_rsa -N &#x27;&#x27; </span><br><span class="line"># 循环把公钥传递到服务器上，免密登录</span><br><span class="line">for i in node1 node2 node3 </span><br><span class="line">do </span><br><span class="line"> ssh-copy-id $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># 根据提示输入密码</span><br></pre></td></tr></table></figure><p>3.给脚本加可执行权限，并配置环境变量，使用全局可用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 把文件存储为xrsync，加上x权限</span><br><span class="line">[root@client shell]# chmod +x xrsync </span><br><span class="line">[root@client shell]# </span><br><span class="line"></span><br><span class="line"># 配置环境变量</span><br><span class="line"># 我把脚本放在/opt/shell下的，自己情况类比修改</span><br><span class="line">[root@client shell]# vim /etc/profile.d/my_env.sh </span><br><span class="line">export PATH=$PATH:/opt/shell</span><br><span class="line"></span><br><span class="line"># 配置生效，就可以在全局生效了</span><br><span class="line">[root@client opt]# source /etc/profile</span><br></pre></td></tr></table></figure><p>至此，早点干完活，开始愉快的玩耍吧~</p>]]></content>
      
      
      <categories>
          
          <category> 神奇的脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用这个脚本实现Linux下的备份与增量同步</title>
      <link href="/shellscript1/1108d700c78c/"/>
      <url>/shellscript1/1108d700c78c/</url>
      
        <content type="html"><![CDATA[<p>  在运维过程中，通常有备份文件的需求，也就是把一些不能存储在数据库的文件备份到一个指定的目录。有人可能会说，使用系统的定时工具，写个脚本就好了，每隔一段时间执行一下备份任务。  </p><p>  但不失为一种方法，但我想在有数据变动的情况下才执行备份任务，没有变化的情况不执行，能否实现呢？  </p><p>  可以，在Linux下可以使用Inotify来解决。Inotify是一个 Linux特性，它监控文件系统操作，比如读取、写入和创建。Inotify 反应灵敏，用法非常简单，并且比 cron 任务的繁忙轮询高效得多，只要使用Inotify文件有变动+rsync命令同步有变化的文件，这样就达到增量备份的需求</p><h1 id="Inotify安装"><a href="#Inotify安装" class="headerlink" title="Inotify安装"></a>Inotify安装</h1>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 安装基本编译环境</span><br><span class="line"></span><br><span class="line"># Rhel &amp;&amp; CentOS</span><br><span class="line"></span><br><span class="line">sudo yum install gcc make</span><br><span class="line"></span><br><span class="line"># Ubuntu</span><br><span class="line"></span><br><span class="line">sudo apt install gcc make</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 下载Inotify工具</span><br><span class="line"></span><br><span class="line">sudo wget http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压</span><br><span class="line"></span><br><span class="line">sudo tar -xf inotify-tools-3.14.tar.gz</span><br><span class="line"></span><br><span class="line">cd inotify-tools-3.14/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 配置、编译和安装</span><br><span class="line"></span><br><span class="line">sudo ./configure</span><br><span class="line"></span><br><span class="line">sudo make &amp;&amp; make install</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  安装完成之后会在/usr/local/bin/inotifywait下生成可执行文件, 使用以下命令时，屏幕输出正常则安装成功。</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@blog ~]# inotifywait --help</span><br><span class="line"></span><br><span class="line">inotifywait 3.14</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  <img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnrvgf9jj31ba0r842j.jpg" alt="image"></p><h1 id="命令用法"><a href="#命令用法" class="headerlink" title="命令用法"></a>命令用法</h1><p>  inotifywait [选项] 目标文件夹</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#常用命令选项：</span><br><span class="line"></span><br><span class="line">-m,持续监控（捕获一个事件后不退出）</span><br><span class="line"></span><br><span class="line">-r,递归监控，包括子目录及文件</span><br><span class="line"></span><br><span class="line">-q,减少屏幕输出信息</span><br><span class="line"></span><br><span class="line">-e,指定监视的modify、move、create、delete、attrib等事件类别。不加此选项时，监控所有操作</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  来测试一下，在任一目录创建一个temp文件夹，使用inotifywait命令监控。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">inotifywait -mrq temp/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  另起一个shell窗口，创建一个空文件，可以发现监控中有多种事件产生。</p><p>  <img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnrw5ze5j30z60nuac6.jpg" alt="image"></p><p>  由此可见，在对文件夹操作时，的确可以监控到时间。</p><h1 id="脚本实现"><a href="#脚本实现" class="headerlink" title="脚本实现"></a>脚本实现</h1><p>  脚本逻辑，当inotifywait捕获到事件时，将文件备份到指定文件夹中，基本逻辑：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">while inotifywait -rq  监控文件夹</span><br><span class="line"></span><br><span class="line">  do</span><br><span class="line"></span><br><span class="line">    #重复执行同步代码</span><br><span class="line"></span><br><span class="line">  done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  比如：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">注意rsync下的源一定要加/</span></span><br><span class="line"></span><br><span class="line">while inotifywait -rq /tmp</span><br><span class="line"></span><br><span class="line">  do </span><br><span class="line"></span><br><span class="line">    rsync --delete -a /tmp/  root@192.168.0.2:/tmp</span><br><span class="line"></span><br><span class="line">  done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  大家也可以使用-e参数，只在指定的事件下执行，或搭配其它脚本命令使用。发挥想象力吧！</p>]]></content>
      
      
      <categories>
          
          <category> 神奇的脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenEuler4</title>
      <link href="/OpenEuler4/c6a1e2597e63/"/>
      <url>/OpenEuler4/c6a1e2597e63/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 我的心得 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OpenEuler3</title>
      <link href="/OpenEuler3/f0284c9127bd/"/>
      <url>/OpenEuler3/f0284c9127bd/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 好玩的项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OpenEuler2</title>
      <link href="/OpenEuler2/a9b821718da6/"/>
      <url>/OpenEuler2/a9b821718da6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 工具软件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux下使用KVM虚拟机安装华为OpenEuler系统</title>
      <link href="/openeulerWithKvm/4c8faf3ce71b/"/>
      <url>/openeulerWithKvm/4c8faf3ce71b/</url>
      
        <content type="html"><![CDATA[<h1 id="背景和优点"><a href="#背景和优点" class="headerlink" title="背景和优点"></a>背景和优点</h1><p>KVM是Kernel-based Virtual Machine的简称，是一个开源的系统虚拟化模块，从名字可以看出，是一个基于内核的虚拟化系统。</p><p>相比较于我们常用的VMware虚拟机，KVM不仅仅开源，而且基于Linux内核，其工作效率更高，这点在红帽官方得到证实。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnho1jckj31bp0u042u.jpg" alt="image"><br>下面是红帽对KVM与VMware官方作出的说明，我把地址放在下面，有需要的朋友可以参考了解。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># KVM与VMware官方对比说明</span><br><span class="line">https://www.redhat.com/zh/topics/virtualization/kvm-vs-vmware-comparison</span><br></pre></td></tr></table></figure><p>KVM 和 VMware ESXi 都是非常成熟稳定的虚拟机监控程序，可以支持各种企业工作负载，由于KVM其开源特性，你不用再像ESXi那样为其支付许可费用，更能节约成本。</p><h1 id="安装KVM"><a href="#安装KVM" class="headerlink" title="安装KVM"></a>安装KVM</h1><p>我这里依然在CentOS下搭建演示，使用Ubuntu的朋友操作类似。<br>使用root用户登录到系统，使用以下命令安装KVM核心组件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 使用命令安装以下KVM核心组件</span><br><span class="line">yum -y install qemu-kvm</span><br><span class="line">yum -y install libvirt-daemon</span><br><span class="line">yum -y install libvirt-client</span><br><span class="line">yum -y install libvirt-daemon-driver-qemu</span><br><span class="line">yum -y install virt-manager</span><br></pre></td></tr></table></figure><p>上面各个组件的含义可参考下表：<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhiytpsj313y0duwg7.jpg" alt="image"><br>安装完成后，启动libvirtd并设置为开机启动。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now libvirtd</span><br><span class="line">systemctl status libvirtd</span><br></pre></td></tr></table></figure><p>可以看到本机上的libvirtd守护进程已经在正常运行。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhi30vzj31em0jkadb.jpg" alt="image"></p><h1 id="使用KVM图形工具"><a href="#使用KVM图形工具" class="headerlink" title="使用KVM图形工具"></a>使用KVM图形工具</h1><p>如果你的Linux有图形桌面环境，那你可能需要到桌面上去执行启动KVM图形管理工具；如果你像我一样使用的是字符下的Linux系统，根本没有安装桌面，那需要一个图形转发软件来显示图形。<br>比如使用NETSARANG旗下的XManager软件来转发，也就是同Xshell一家的软件。<br>在Windows下安装好XManager和Xshell工具软件，使用Xshell登录到前面安装好KVM的操作系统，使用以下命令运行KVM图形管理工具。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-manager</span><br></pre></td></tr></table></figure><p>执行后，会自动弹出一个窗口，如果你像我一样没有报错则成功。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhjcgbtj30vq0g4abb.jpg" alt="image"></p><h1 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h1><p>利用文件传输工具将OpenEuler传输到服务器/tmp目录下备用。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhnln6rj30rz0ftdiv.jpg" alt="QQ20211123-0"><br>回到前面的图形操作界面，在KVM里新建一个虚拟机。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhlssupj30g50bx3yv.jpg" alt="1"><br>选择本地的ISO镜像文件。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhn7obfj30bd0b4t98.jpg" alt="2"><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhjt6xij30e80b4jru.jpg" alt="3"><br>选择本地的ISO文件，并浏览本地目录。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhlcivrj30kt0eqmxu.jpg" alt="4"><br>定位到文件目录/tmp下，并选定我们的安装镜像文件中。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhkuvfkj30uh0lcmyo.jpg" alt="5"><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhifg07j30uf0dq3zm.jpg" alt="6"><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhka8b3j30e80b4gm6.jpg" alt="7"></p><p>配置好内存和磁盘和CPU大小。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhh8opqj30b40b474l.jpg" alt="8"><br>重命名下新建的虚拟机，点击完成。<br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhhhe5fj30b40b4q3e.jpg" alt="9"></p><p>最后就是我们熟悉的安装界面了。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhmmxraj30mh0hrjs2.jpg" alt="10"><br><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwsnhm6401j30m60heq61.jpg" alt="11"></p>]]></content>
      
      
      <categories>
          
          <category> Linux涨姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenEuler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/test/30c55125f534/"/>
      <url>/test/30c55125f534/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 上手云计算 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL运维常用命令大全</title>
      <link href="/DBA1/d5c9783a6fea/"/>
      <url>/DBA1/d5c9783a6fea/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建数据库服务器"><a href="#搭建数据库服务器" class="headerlink" title="搭建数据库服务器"></a>搭建数据库服务器</h1><p>MySQL 是最流行的关系型数据库管理系统,在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System:关系数据库管理系统)应用软件之一。<br><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gutttmg66uj60b3083t8s02.jpg" alt="mysql"></p><h2 id="安装软件、启动服务"><a href="#安装软件、启动服务" class="headerlink" title="安装软件、启动服务"></a>安装软件、启动服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -xf mysql-5.7.17.tar</span><br><span class="line">yum -y install mysql-community-*.rpm</span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line">netstat -utnlp | grep 3306</span><br><span class="line">ps -C mysqld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意，与系统自带的mariadb软件冲突，不能同时安装</span></span><br></pre></td></tr></table></figure><h2 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h2><ul><li>默认仅允许root本机连接</li><li>首次登录密码在安装软件时随机生成</li><li>随机密码在日志文件/var/log.mysql.log里</li><li>mysql -h 数据库地址 -uroot -p密码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;password&#x27; /var/log/mysqld.log</span><br><span class="line">2021-09-26T03:13:28.754966Z 1 [Note] A temporary password is generated for root@localhost: n&gt;VyttrLX3#l</span><br><span class="line"></span><br><span class="line">mysql -uroot -p&#x27;n&gt;VyttrLX3#l&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">alter user root@&quot;localhost&quot; identified by &quot;密码&quot;;</span><br><span class="line">mysql -uroot -p密码;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> eg</span></span><br><span class="line">alter user root@&quot;localhost&quot; identified by &quot;Passw0rd!&quot;;</span><br></pre></td></tr></table></figure><h2 id="修改密码策略"><a href="#修改密码策略" class="headerlink" title="修改密码策略"></a>修改密码策略</h2><ul><li>默认密码策略是1。 8位、数字、大小写与特殊字符</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看变量</span></span><br><span class="line">show variables like &quot;%password%&quot;;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 临时有效（命令行）</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改策略为0</span></span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码长度</span></span><br><span class="line">set global validate_password_length=6;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 永久生效</span></span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">validate_password_policy=0</span><br><span class="line">validate_password_length=6</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gutv2ql54xj61760jlq6402.jpg" alt="image-20210926111911533"></p><h1 id="命令行连接数据库服务"><a href="#命令行连接数据库服务" class="headerlink" title="命令行连接数据库服务"></a>命令行连接数据库服务</h1><p><strong>命令行连接</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -hlocalhost -uroot -ptedu.cn sys</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后一行为系统数据库</span></span><br></pre></td></tr></table></figure><p><strong>查看当前所在的库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">select databases();</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select database();</span></span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| NULL       |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. 使用\c取消结束</span><br><span class="line">show databases</span><br><span class="line">\c</span><br><span class="line"></span><br><span class="line">2.命令不区分大小写</span><br><span class="line"></span><br><span class="line">3.默认不支持tab不齐</span><br><span class="line"></span><br><span class="line">4.查看已连接的用户</span><br><span class="line">select user();</span><br></pre></td></tr></table></figure><h2 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h2><ul><li>常用的sql命令分类<ul><li>DDL </li><li>DML</li><li>DCL</li><li>DTL</li></ul></li></ul><h2 id="库名要求"><a href="#库名要求" class="headerlink" title="库名要求"></a>库名要求</h2><ul><li>仅可以使用数字、字母、下划线、不能纯数字</li><li>区分字母大小写、具有唯一性</li><li>不可以使用指令关键字、特殊字符 </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create database DB1;</span><br><span class="line">create database db1;</span><br></pre></td></tr></table></figure><h2 id="表管理命令"><a href="#表管理命令" class="headerlink" title="表管理命令"></a>表管理命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table 库名.表名(字段名 宽度， 字段名 宽度) default charset=utf8;  //指定中文字符，可以给字段赋值中文。</span><br><span class="line"></span><br><span class="line"># 创建表后，会在mysql下会创建对应的文件</span><br><span class="line">create table db1.stuinfo(姓名 char(10), age int) default charset=utf8;</span><br><span class="line">[root@hecs-268354 db1]# ls</span><br><span class="line">@5b66@751f@8868.frm  @5b66@751f@8868.ibd  db.opt  stuinfo.frm  stuinfo.ibd</span><br><span class="line">[root@hecs-268354 db1]#</span><br></pre></td></tr></table></figure><ul><li><p><strong>查看表结构</strong></p><p>desc命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">desc stuinfo;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果是绝对路径</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> desc db1.stuinfo</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc stuinfo;</span></span><br><span class="line">+--------+----------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type     | Null | Key | Default | Extra |</span><br><span class="line">+--------+----------+------+-----+---------+-------+</span><br><span class="line">| 姓名   | char(10) | YES  |     | NULL    |       |</span><br><span class="line">| age    | int(11)  | YES  |     | NULL    |       |</span><br><span class="line">+--------+----------+------+-----+---------+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>管理记录</strong></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">select * from stuinfo;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 插入</span></span><br><span class="line">insert into db1.stuinfo values(&quot;bob&quot;, 21);</span><br><span class="line">insert into db1.stuinfo values(&quot;lucy&quot;, 18);</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from stuinfo;</span></span><br><span class="line">+--------+------+</span><br><span class="line">| 姓名   | age  |</span><br><span class="line">+--------+------+</span><br><span class="line">| bob    |   21 |</span><br><span class="line">| lucy   |   18 |</span><br><span class="line">+--------+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改</span></span><br><span class="line">updata db1.stuinfo set age=29 where 姓名=&quot;bob&quot;;</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from stuinfo;</span></span><br><span class="line">+--------+------+</span><br><span class="line">| 姓名   | age  |</span><br><span class="line">+--------+------+</span><br><span class="line">| bob    |   29 |</span><br><span class="line">| lucy   |   18 |</span><br><span class="line">+--------+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删所有行</span></span><br><span class="line">delete from db1.stuinfo;</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> delete from db1.stuinfo;</span></span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from stuinfo;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li>数值型：体重、身高、成绩、工资</li><li>字符型 ：姓名、工作单位、通信住址</li><li>枚举型： 兴趣爱好、性别、专业</li><li>日期时间型： 出生时间、注册时间</li></ul><h2 id="定长char"><a href="#定长char" class="headerlink" title="定长char"></a>定长char</h2><ul><li>最大字符个数据255</li><li>不够指定字符个数时在右边用空格补全</li><li>字符个数超出时，无法写入数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t1 (name char(3), homeaddr char(10));</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+---------------+</span><br><span class="line">| Tables_in_db1 |</span><br><span class="line">+---------------+</span><br><span class="line">| 学生表        |</span><br><span class="line">| stuinfo       |</span><br><span class="line">| t1            |</span><br><span class="line">+---------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line"># 报错</span><br><span class="line">mysql&gt; insert into db1.t1 values(&quot;lucy&quot;, &quot;china&quot;)</span><br><span class="line">    -&gt; ;</span><br><span class="line">ERROR 1406 (22001): Data too long for column &#x27;name&#x27; at row 1</span><br></pre></td></tr></table></figure><h2 id="变长varchar"><a href="#变长varchar" class="headerlink" title="变长varchar"></a>变长varchar</h2><ul><li>按数据实际大小分配存储空间</li><li>65532</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 比如邮件地址，它不固定</span></span><br><span class="line">varchar(50)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create table  db1.t2 (class char(7), email varchar(30));</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into db1.t2 values(<span class="string">&quot;nsd2103&quot;</span>, <span class="string">&#x27;3036@qq.com&#x27;</span>)</span></span><br><span class="line">    -&gt; ;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="大文件类型-text-blob"><a href="#大文件类型-text-blob" class="headerlink" title="大文件类型:text/blob"></a>大文件类型:text/blob</h2><ul><li>字符数大于65535存储时使用</li><li>通常存储访问地址</li></ul><h1 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h1><h2 id="整数型-只能存整数"><a href="#整数型-只能存整数" class="headerlink" title="整数型(只能存整数)"></a>整数型(只能存整数)</h2><table><thead><tr><th align="center">类型</th><th>名称</th><th>有符号范围</th><th>无符号范围</th></tr></thead><tbody><tr><td align="center">tinyint</td><td>微小整数</td><td>-128~127</td><td>0~255</td></tr><tr><td align="center">smallint</td><td>小整数</td><td>- 32768~32767</td><td>0~65535</td></tr><tr><td align="center">mediumint</td><td>中整数</td><td>-2^23 ~ 2^23-1</td><td>0 ~ 2^24-1</td></tr><tr><td align="center">int</td><td>大整数</td><td>^31</td><td>^32</td></tr><tr><td align="center">bigint</td><td>极大整数</td><td>^63</td><td>^64</td></tr><tr><td align="center">unsigned</td><td>使用无符号存储范围</td><td></td><td></td></tr></tbody></table><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p><img src="https://i.loli.net/2021/10/02/FKP5Yi4Sp31Vt8E.png" alt="image-20211002111034448"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 采用无符号存储年龄，圆周率使用double存储</span></span><br><span class="line">create table t3(name char(10), age tinyint unsigned, level tinyint, yzl double);</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t3;</span></span><br><span class="line">+-------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type                | Null | Key | Default | Extra |</span><br><span class="line">+-------+---------------------+------+-----+---------+-------+</span><br><span class="line">| name  | char(10)            | YES  |     | NULL    |       |</span><br><span class="line">| age   | tinyint(3) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| level | tinyint(4)          | YES  |     | NULL    |       |</span><br><span class="line">| yzl   | double              | YES  |     | NULL    |       |</span><br><span class="line">+-------+---------------------+------+-----+---------+-------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 插入一行数据</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t3 values(<span class="string">&#x27;bob&#x27;</span>, 19, 125, 3.1415926);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>如果为整数类型，存入小数时，会四舍五入</p></blockquote><h3 id="指定小数位的位数"><a href="#指定小数位的位数" class="headerlink" title="指定小数位的位数"></a>指定小数位的位数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">float</span>(5, 2) 第一位是总位数，第二位是小数位数，最大能存储到99999.99</span></span><br><span class="line">create table t5(name char(10), pay float(7,2));</span><br><span class="line"></span><br><span class="line">insert into t5 values(&quot;jim&quot;, 3999);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t5 values(<span class="string">&quot;jim&quot;</span>, 3999);</span></span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t5 values(<span class="string">&quot;jim&quot;</span>, 2.433);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t5;</span></span><br><span class="line">+------+---------+</span><br><span class="line">| name | pay     |</span><br><span class="line">+------+---------+</span><br><span class="line">| jim  | 3999.00 |</span><br><span class="line">| jim  |    2.43 |</span><br><span class="line">+------+---------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>如果小数位大于设定值，会四舍五入</p></blockquote><h1 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h1><ul><li>date</li></ul><p>范围:0001-01-01~9999-12-31</p><p>格式:yyyymmdd 19491901</p><ul><li>year</li></ul><p>范围：1901~2155</p><p>格式：yyyy   1998</p><p>要求四位数</p><p>当使用两位时：01-99</p><p>01-69视为： 2001~2069</p><p>70-99视为：1970~1999</p><ul><li>time</li></ul><p>格式：HHMMSS 221828  </p><ul><li>日期时间 datetime</li></ul><p>范围:1000-01-01 00:00:00~9999-12-21 23:59:59</p><p>格式:yyyymmddhhmmss</p><ul><li>日期时间timestamp</li></ul><p>范围: 1970-01-01 00:00:00 ~ 2038-01-19 00:00:00</p><p>格式:yyyymmddhhmmss</p><blockquote><p>当未给timestamp字段赋值时，自动以当前系统时间赋值，而datetime值为NULL</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t7 (name char(10), birthday date, csnf year, up_class time, party datetime);</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t7;</span></span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type     | Null | Key | Default | Extra |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| name     | char(10) | YES  |     | NULL    |       |</span><br><span class="line">| birthday | date     | YES  |     | NULL    |       |</span><br><span class="line">| csnf     | year(4)  | YES  |     | NULL    |       |</span><br><span class="line">| up_class | time     | YES  |     | NULL    |       |</span><br><span class="line">| party    | datetime | YES  |     | NULL    |       |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 插入对应的值</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t7 values(<span class="string">&quot;alices&quot;</span>, 20211120, 1990, 193000, 20220101183000);</span></span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h2><p><img src="https://i.loli.net/2021/10/03/dFAMuVUBhfOCc8p.jpg" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取当前操作系统的时间</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select curdate();</span></span><br><span class="line">+------------+</span><br><span class="line">| curdate()  |</span><br><span class="line">+------------+</span><br><span class="line">| 2021-10-03 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select now();</span></span><br><span class="line">+---------------------+</span><br><span class="line">| now()               |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2021-10-03 10:16:19 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获得单独的年份或月份</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select time(now());</span></span><br><span class="line">+-------------+</span><br><span class="line">| time(now()) |</span><br><span class="line">+-------------+</span><br><span class="line">| 10:17:24    |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select year(now());</span></span><br><span class="line">+-------------+</span><br><span class="line">| year(now()) |</span><br><span class="line">+-------------+</span><br><span class="line">|        2021 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><p><strong>利用时间函数获得的值赋值</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">insert into t7 values(&quot;jerry&quot;, curdate(), year(now()), time(now()), now());</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意year的时间写为两位数时，要注意对应关系</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into db1.t7 values(<span class="string">&quot;koko&quot;</span>, curdate(), 99, time(now()), now());</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from db1.t7 <span class="built_in">where</span> name=<span class="string">&#x27;koko&#x27;</span>;</span></span><br><span class="line">+------+------------+------+----------+---------------------+</span><br><span class="line">| name | birthday   | csnf | up_class | party               |</span><br><span class="line">+------+------------+------+----------+---------------------+</span><br><span class="line">| koko | 2021-10-03 | 1999 | 10:23:41 | 2021-10-03 10:23:41 |</span><br><span class="line">+------+------------+------+----------+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>当未给timestamp字段赋值时，自动以当前系统时间赋值，而datetime值为NULL</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">create table t8(meeting datetime, party timestamp);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 存第一行数据</span></span><br><span class="line">insert into t8 values(19981120213058, 20231120154828);</span><br><span class="line"><span class="meta">#</span><span class="bash"> 存第二行数据</span></span><br><span class="line">insert into t8(metting) values(20191120213058);</span><br><span class="line"><span class="meta">#</span><span class="bash"> 存储之后发现以当前系统的时间来赋值</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t8;</span></span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| meeting             | party               |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| 1998-11-20 21:30:58 | 2023-11-20 15:48:28 |</span><br><span class="line">| 2019-11-20 21:30:58 | 2021-10-03 10:30:27 |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 而datetime值为NULL</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t8(party) values(20201120213058);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t8;</span></span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| meeting             | party               |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| 1998-11-20 21:30:58 | 2023-11-20 15:48:28 |</span><br><span class="line">| 2019-11-20 21:30:58 | 2021-10-03 10:30:27 |</span><br><span class="line">| NULL                | 2020-11-20 21:30:58 |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><h1 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h1><ul><li><p>enum 单选：</p><ul><li>格式：字段名 enum（值1，值2，值n）</li><li>仅能在列表里选择一个值 </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table db1.t5(name char(5), sex enum(<span class="string">&quot;boy&quot;</span>, <span class="string">&quot;girl&quot;</span>, <span class="string">&quot;no&quot;</span>));</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into db1.t5 values(<span class="string">&quot;bob&quot;</span>, <span class="string">&quot;man&quot;</span>);</span></span><br></pre></td></tr></table></figure></li><li><p>set 多选</p><ul><li>格式：字段名 set(值1， 值2， 值N)</li><li>在列表里选择一个或多个</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">create table db1.t6(name char(5), likes set(&quot;eat&quot;, &quot;game&quot;, &quot;music&quot;, &quot;money&quot;));</span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into db1.t5 values(<span class="string">&quot;jerry&quot;</span>, <span class="string">&quot;eat,film&quot;</span>);</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t9(name char(10), gender enum(<span class="string">&quot;boy&quot;</span>, <span class="string">&quot;girl&quot;</span>, <span class="string">&quot;no&quot;</span>),  likes <span class="built_in">set</span>(<span class="string">&quot;eat&quot;</span>,<span class="string">&quot;sleep&quot;</span>,<span class="string">&quot;game&quot;</span>,<span class="string">&quot;money&quot;</span>));</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t9;</span></span><br><span class="line">+--------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type                              | Null | Key | Default | Extra |</span><br><span class="line">+--------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| name   | char(10)                          | YES  |     | NULL    |       |</span><br><span class="line">| gender | enum(&#x27;boy&#x27;,&#x27;girl&#x27;,&#x27;no&#x27;)           | YES  |     | NULL    |       |</span><br><span class="line">| likes  | set(&#x27;eat&#x27;,&#x27;sleep&#x27;,&#x27;game&#x27;,&#x27;money&#x27;) | YES  |     | NULL    |       |</span><br><span class="line">+--------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert t9 values(<span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;boy&quot;</span>, <span class="string">&quot;eat,sleep&quot;</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t9;</span></span><br><span class="line">+------+--------+-----------+</span><br><span class="line">| name | gender | likes     |</span><br><span class="line">+------+--------+-----------+</span><br><span class="line">| aaa  | boy    | eat,sleep |</span><br><span class="line">+------+--------+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h1><ul><li>作用，限制字段赋值0</li><li>设置约束条件<ul><li>null 允许为空</li><li>not null 不允许为null（空）</li><li>key 键值类型</li><li>default 设置默认值，缺省为NULL</li><li>extra 额外设置</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">create table t10(name char(10) not null, gender enum(&quot;boy&quot;, &quot;girl&quot;) default &quot;boy&quot;, class char(7) not null default &quot;nsd2112&quot;);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t10;</span></span><br><span class="line">+--------+--------------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type               | Null | Key | Default | Extra |</span><br><span class="line">+--------+--------------------+------+-----+---------+-------+</span><br><span class="line">| name   | char(10)           | NO   |     | NULL    |       |</span><br><span class="line">| gender | enum(&#x27;boy&#x27;,&#x27;girl&#x27;) | YES  |     | boy     |       |</span><br><span class="line">| class  | char(7)            | NO   |     | nsd2112 |       |</span><br><span class="line">+--------+--------------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 插入行</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into t10(name) values(<span class="string">&quot;bob&quot;</span>);</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from t10;</span></span><br><span class="line">+------+--------+---------+</span><br><span class="line">| name | gender | class   |</span><br><span class="line">+------+--------+---------+</span><br><span class="line">| bob  | boy    | nsd2112 |</span><br><span class="line">+------+--------+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><h1 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h1><ul><li>用法</li><li>mysql&gt; alter table 库名.表名 执行动作<ul><li>add        添加字段</li><li>modify  修改字段类型</li><li>change  修改字段名</li><li>drop       删除字段</li><li>rename 修改表名</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t1;</span></span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type     | Null | Key | Default | Extra |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| name     | char(3)  | YES  |     | NULL    |       |</span><br><span class="line">| homeaddr | char(10) | YES  |     | NULL    |       |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加列</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t1;</span></span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type     | Null | Key | Default | Extra |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| name     | char(3)  | YES  |     | NULL    |       |</span><br><span class="line">| homeaddr | char(10) | YES  |     | NULL    |       |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table t1 add class char(7) not null default <span class="string">&quot;nsd2023&quot;</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t1;</span></span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type     | Null | Key | Default | Extra |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| name     | char(3)  | YES  |     | NULL    |       |</span><br><span class="line">| homeaddr | char(10) | YES  |     | NULL    |       |</span><br><span class="line">| class    | char(7)  | NO   |     | nsd2023 |       |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash"></span><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 把列添加到第一列</span></span><br><span class="line">alter table t1 add stu_num int first;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 指定把列放在具体的位置</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table t1 add age tinyint unsigned after name;</span></span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc t1;</span></span><br><span class="line">+----------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type                | Null | Key | Default | Extra |</span><br><span class="line">+----------+---------------------+------+-----+---------+-------+</span><br><span class="line">| stu_num  | int(11)             | YES  |     | NULL    |       |</span><br><span class="line">| name     | char(3)             | YES  |     | NULL    |       |</span><br><span class="line">| age      | tinyint(3) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| homeaddr | char(10)            | YES  |     | NULL    |       |</span><br><span class="line">| class    | char(7)             | NO   |     | nsd2023 |       |</span><br><span class="line">+----------+---------------------+------+-----+---------+-------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><p><strong>修改字段</strong></p><ul><li>修改的字段不能与已经存在数据冲突<ul><li>可以修改为有值</li><li>删除此列，重新建立</li></ul></li></ul><p><strong>调整字段的位置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 把class列修改到stu_num的后面</span></span><br><span class="line">alter table t1 modify class char(7) not null default &quot;nsd2023&quot; after stu_num;</span><br></pre></td></tr></table></figure><p><strong>删除字段</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 同时删除两列</span><br><span class="line">alter table t1 drop stu_num, drop homeaddr;</span><br></pre></td></tr></table></figure><p><strong>修改字段名字</strong></p><ul><li>alter table 库名.表名 change 原字段名 新字段名 类型 约束条件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table t1 change name 姓名 char(3);</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc t1</span><br><span class="line">    -&gt; ;</span><br><span class="line">+--------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type                | Null | Key | Default | Extra |</span><br><span class="line">+--------+---------------------+------+-----+---------+-------+</span><br><span class="line">| 姓名   | char(3)             | YES  |     | NULL    |       |</span><br><span class="line">| age    | tinyint(3) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| class  | char(7)             | NO   |     | nsd2023 |       |</span><br><span class="line">+--------+---------------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>修改表名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table t1 rename 学生信息表;</span><br></pre></td></tr></table></figure><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><ul><li>index    普通索引</li><li>unique 唯一索引</li><li>fulltext 全文索引</li><li>primary key  主键</li><li>foreign key 外键</li></ul><p><strong>索引是什么？</strong></p><ul><li>类似于书的目录 </li><li>对表中字段值进行排序</li><li>索引算法:Btree / B + tree / hash</li></ul><p><strong>优缺点？</strong></p><ul><li>可以加快数据的查询速度</li><li>当表中的数据进行增加，删除和修改的时候，索引也要动态的调整，降低了数据的维护速度</li><li>索引需要占物理空间</li></ul><p><strong>适用于</strong>？</p><ul><li>适用于selelct的操作远大于修改插入等操作</li><li>通常把做为查询条件的字段设置为index字段</li><li>index 字段 标志不MUL（在key那里）</li><li>字段的值允许重复，且可以赋NULL值 </li></ul><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><ul><li>create index 索引名 on 表名（字段名）</li><li>drop index 索引名 on 表名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc t9;</span><br><span class="line">+--------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type                              | Null | Key | Default | Extra |</span><br><span class="line">+--------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| name   | char(10)                          | YES  | MUL | NULL    |       |</span><br><span class="line">| gender | enum(&#x27;boy&#x27;,&#x27;girl&#x27;,&#x27;no&#x27;)           | YES  |     | NULL    |       |</span><br><span class="line">| likes  | set(&#x27;eat&#x27;,&#x27;sleep&#x27;,&#x27;game&#x27;,&#x27;money&#x27;) | YES  |     | NULL    |       |</span><br><span class="line">+--------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看创建索引的详细信息"><a href="#查看创建索引的详细信息" class="headerlink" title="查看创建索引的详细信息"></a>查看创建索引的详细信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show index from t9 \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Table: t9</span><br><span class="line">   Non_unique: 1</span><br><span class="line">     Key_name: xxx</span><br><span class="line"> Seq_in_index: 1</span><br><span class="line">  Column_name: name</span><br><span class="line">    Collation: A</span><br><span class="line">  Cardinality: 0</span><br><span class="line">     Sub_part: NULL</span><br><span class="line">       Packed: NULL</span><br><span class="line">         Null: YES</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      Comment:</span><br><span class="line">Index_comment:</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR:</span><br><span class="line">No query specified0</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><strong>建表的时候创建索引</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table t12( name char(10), class char(7), email varchar(30), age int, index(name), index(class));</span></span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><p><strong>删除索引</strong></p><ul><li>要先查索引名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">show index from t12 \G;  # 如果是在创建时建立的，那么索引名与字段名一样</span><br><span class="line">drop index class on t12;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; desc t12;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| name  | char(10)    | YES  | MUL | NULL    |       |</span><br><span class="line">| class | char(7)     | YES  |     | NULL    |       |</span><br><span class="line">| email | varchar(30) | YES  |     | NULL    |       |</span><br><span class="line">| age   | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="主键primary-key"><a href="#主键primary-key" class="headerlink" title="主键primary key"></a>主键primary key</h1><ul><li>字段值不允许重复，且不允许赋NULL值 ,设置为主键后，它会自动设置为不允许空值 </li><li>一个表中只能有一个primary key字段</li><li>多个字段都作为主键，称为复合主键，必须一起创建</li><li>主键字段的标志是PRI</li><li>主键通常与auto_increment连用</li><li>通常把表中唯一标识记录的字段[记录编号字段]设置为主键</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">定义主键通常有两种方式</span><br><span class="line">create table t8(name char(3) primary key, age int);</span><br><span class="line">create table t8(name char(3) age int, primary key(name));</span><br></pre></td></tr></table></figure><p><strong>删除主键</strong></p><ul><li>alter table 表名 drop primary key;</li><li>删除主键前，如果有自增属性，必须先去掉000</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">alter table t13 drop primary key;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加主键</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table t9 add primary key(name);</span></span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><h2 id="与auto-increment连用"><a href="#与auto-increment连用" class="headerlink" title="与auto_increment连用"></a>与auto_increment连用</h2><ul><li>字段名 类型 primary key auto_increment</li><li>字段通过自加1方式赋值</li><li>必须要是数值类型</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table t6(id int primary key auto_increment, name char(10), sex enum(&quot;man&quot;, &quot;woman&quot;));</span><br><span class="line"></span><br><span class="line">mysql&gt; desc t15;</span><br><span class="line">+-------+---------------------+------+-----+---------+----------------+</span><br><span class="line">| Field | Type                | Null | Key | Default | Extra          |</span><br><span class="line">+-------+---------------------+------+-----+---------+----------------+</span><br><span class="line">| id    | int(11)             | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name  | char(10)            | YES  |     | NULL    |                |</span><br><span class="line">| sex   | enum(&#x27;man&#x27;,&#x27;woman&#x27;) | YES  |     | NULL    |                |</span><br><span class="line">+-------+---------------------+------+-----+---------+----------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="复合主键"><a href="#复合主键" class="headerlink" title="复合主键"></a>复合主键</h2><ul><li>表中多个字段一起做主键</li><li>插入记录时，不允许主键字段值同时重复，同时！！！</li><li>创建时，需要一起指定</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">create table t17( cip varchar(15), s_port smallint, status enum(&quot;allow&quot;, &quot;deny&quot;), primary key(cip, s_port));</span><br><span class="line"></span><br><span class="line">+--------+----------------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type                 | Null | Key | Default | Extra |</span><br><span class="line">+--------+----------------------+------+-----+---------+-------+</span><br><span class="line">| cip    | varchar(15)          | NO   | PRI | NULL    |       |</span><br><span class="line">| s_port | smallint(6)          | NO   | PRI | NULL    |       |</span><br><span class="line">| status | enum(&#x27;allow&#x27;,&#x27;deny&#x27;) | YES  |     | NULL    |       |</span><br><span class="line">+--------+----------------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line">mysql&gt; insert into t17 values(&quot;1.1.1.1&quot;, 22, &quot;allow&quot;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into t17 values(&quot;1.1.1.1&quot;, 23, &quot;allow&quot;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from t17;</span><br><span class="line">+---------+--------+--------+</span><br><span class="line">| cip     | s_port | status |</span><br><span class="line">+---------+--------+--------+</span><br><span class="line">| 1.1.1.1 |     22 | allow  |</span><br><span class="line">| 1.1.1.1 |     23 | allow  |</span><br><span class="line">+---------+--------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><p><strong>删除复合主键</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table t17 drop primary key;</span><br></pre></td></tr></table></figure><p><strong>添加复合主键</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table t17 add primary key(cip, s_port);</span><br></pre></td></tr></table></figure><h1 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h1><p><strong>功能：插入表记录时，字段值在另一个表字段范围内选择</strong></p><p>目的：为了保证数据的一致性</p><ul><li>使用规则<ul><li>表存储引擎必须是innodb</li><li>字段类型要一致</li><li>被参照字段必须要是索引类型的一种(primary key)</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(字段名列表, foreign key(字段名) references 表名(字段名) //指定外键</span><br><span class="line">                on update cascade //同步更新</span><br><span class="line">                on delete cascade //同步删除</span><br><span class="line">               )engine=innodb; //存储引擎</span><br></pre></td></tr></table></figure><p><strong>例子</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1.员工表</span><br><span class="line">2.工资表</span><br><span class="line"></span><br><span class="line">create table yg(yg_id int primary key auto_increment, name varchar(4)) engine=innodb;</span><br><span class="line">create table gz(gz_id int, gz float(7,2), foreign key(gz_id) references yg(yg_id) on update cascade on delete cascade)engine=innodb;</span><br><span class="line"># show table status from db1;</span><br><span class="line"># 查看存储引擎</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 插入数据</span><br><span class="line">mysql&gt; insert into yg(name) values(&quot;bob&quot;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into yg(name) values(&quot;tom&quot;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into yg(name) values(&quot;lucy&quot;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from yg;</span><br><span class="line">+-------+------+</span><br><span class="line">| yg_id | name |</span><br><span class="line">+-------+------+</span><br><span class="line">|     1 | bob  |</span><br><span class="line">|     2 | tom  |</span><br><span class="line">|     3 | lucy |</span><br><span class="line">+-------+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into gz(gz_id, gz) values(1, 15000);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into gz(gz_id, gz) values(4, 15000);</span><br><span class="line">ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`db1`.`gz`, CONSTRAINT `gz_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `yg` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE)</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><strong>同步更新的限制(主表变，从表相应变)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from gz;</span><br><span class="line">+-------+----------+</span><br><span class="line">| gz_id | gz       |</span><br><span class="line">+-------+----------+</span><br><span class="line">|     1 | 15000.00 |</span><br><span class="line">+-------+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; update yg set yg_id=8 where yg_id=1;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from gz;</span><br><span class="line">+-------+----------+</span><br><span class="line">| gz_id | gz       |</span><br><span class="line">+-------+----------+</span><br><span class="line">|     8 | 15000.00 |</span><br><span class="line">+-------+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><strong>同步删除</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from yg where yg_id=8;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from gz;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><strong>处理外键不唯一一问题</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into gz(gz_id, gz) values(2, 15000);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into gz(gz_id, gz) values(2, 15000);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from gz;</span><br><span class="line">+-------+----------+</span><br><span class="line">| gz_id | gz       |</span><br><span class="line">+-------+----------+</span><br><span class="line">|     2 | 15000.00 |</span><br><span class="line">|     2 | 15000.00 |</span><br><span class="line">+-------+----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into gz(gz_id, gz) values(null, 15000);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改为住建</span></span><br><span class="line">alter table gz add gz_id int not null primary key;</span><br></pre></td></tr></table></figure><h2 id="删除外键"><a href="#删除外键" class="headerlink" title="删除外键"></a>删除外键</h2><ul><li>查看外键 show create table 表名 \G</li><li>命令格式 alter table 表名 drop foreign key 名称;</li><li>添加外键 alter table 表名 add foreign key(字段名) on update cacsade on delete cascade;</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show create table gz \G</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: gz</span><br><span class="line">Create Table: CREATE TABLE `gz` (</span><br><span class="line">  `gz_id` int(11) NOT NULL,</span><br><span class="line">  `gz` float(7,2) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`gz_id`),</span><br><span class="line">  CONSTRAINT `gz_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `yg` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里的gz_ibfk_1是外键名</span></span><br><span class="line">alter table gz drop foreign key gz_ibfk_1;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 再重新加上</span></span><br><span class="line">alter table gz add foreign key(gz_id) references yg(yg_id) on update cascade on delete cascade; </span><br></pre></td></tr></table></figure><h1 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h1><p>查看默认设置</p><ul><li>安装mysql服务软件时，会自动创建检索目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;secure_file_priv&quot;;</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like &quot;secure_file_priv&quot;;</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| Variable_name    | Value                 |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| secure_file_priv | /var/lib/mysql-files/ |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show variables like &quot;%file%&quot;;</span><br><span class="line"></span><br><span class="line"># 执行系统命令</span><br><span class="line">mysql&gt; system ls /var/lib</span><br></pre></td></tr></table></figure><h2 id="修改检索目录"><a href="#修改检索目录" class="headerlink" title="修改检索目录"></a>修改检索目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mkdir /myload</span><br><span class="line">chown mysql /myload</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">secure_file_priv=&quot;/myload&quot;</span><br><span class="line">systemctl restart mysqld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">&quot;secure_file_priv&quot;</span>;</span></span><br><span class="line">+------------------+----------+</span><br><span class="line">| Variable_name    | Value    |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| secure_file_priv | /myload/ |</span><br><span class="line">+------------------+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; load data infile &quot;/目录名/文件名&quot;</span><br><span class="line">into table 库名.表名</span><br><span class="line">fields terminated by &quot;符号&quot;  # 列间隔符号</span><br><span class="line">lines terminated by &quot;\n&quot;    # 行结束符号11</span><br></pre></td></tr></table></figure><ul><li>将/etc/passwd文件导入db3库中user表里，并添加行号字段</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create database db3;</span><br><span class="line">create table db3.user(name char(30), password char(1), uid int, gid int, comment varchar(150), homeaddr char(100), shell char(50));</span><br><span class="line"></span><br><span class="line">system cp /etc/passwd /myload/</span><br><span class="line"></span><br><span class="line"># load data infile &quot;/myload/passwd&quot; into table db3.user fields terminated by &quot;:&quot; lines terminated by &quot;\n&quot;;</span><br><span class="line">mysql&gt; load data infile &quot;/myload/passwd&quot; into table db3.user</span><br><span class="line">    -&gt; fields terminated by &quot;:&quot; lines terminated by &quot;\n&quot;;</span><br><span class="line">Query OK, 22 rows affected (0.00 sec)</span><br><span class="line">Records: 22  Deleted: 0  Skipped: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"># 加上行号</span><br><span class="line">mysql&gt; alter table db3.user add id int primary key auto_increment first;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><ul><li>字段分割符要与文件一致</li><li>表字段类型和字段个数要与文件内容匹配</li><li>导入数据时指定文件的绝对路径</li></ul><h1 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h1><ul><li><p>把表里的记录保存到系统文件里</p><ul><li><p>格式1，把查询的结果导出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select 命令 into outfile &quot;/目录名/文件名&quot;;</span><br><span class="line"># 如下，目录是系统指定的目录，文件名自定义</span><br><span class="line">mysql&gt; select * from db3.user into outfile &quot;/myload/user&quot;;</span><br><span class="line">Query OK, 22 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></li><li><p>格式2， 可以指定导出时以指定分隔符分隔</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select 命令 into outfile &quot;/目录名/文件名&quot; fields terminated by &#x27;分隔符&#x27;;</span><br><span class="line"></span><br><span class="line">select * from db3.user into outfile &quot;/myload/user&quot; fields terminated by &quot;:&quot;;</span><br></pre></td></tr></table></figure></li><li><p>格式3，指定每列的分隔符，默认为\n</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># select 命令 into outfile &quot;/目录名/文件名&quot; fields terminated by &#x27;分隔符&#x27; lines terminated by &quot;分割符&quot;;</span><br><span class="line">select * from db3.user into outfile &quot;/myload/user&quot; fields terminated by &quot;:&quot; lines terminated by &quot;###&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>导出的结构完全取决于前面的查询命令</p></blockquote></li></ul></li></ul><h1 id="插入表记录"><a href="#插入表记录" class="headerlink" title="插入表记录"></a>插入表记录</h1><ul><li><p>格式1：添加1条记录，给所有字段赋值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 values(字段值列表);</span><br></pre></td></tr></table></figure></li><li><p>格式2：添加多条记录，给所有字段赋值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 values(字段值列表),(字段值列表),(字段值列表);</span><br></pre></td></tr></table></figure></li><li><p>格式3：添加1条记录，给执行字段赋值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名(字段名列表) values (字段值列表);</span><br></pre></td></tr></table></figure></li><li><p>格式4：添加多条记录，给指定字段赋值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名(字段名列表) values (字段值列表)，(字段值列表),(字段值列表)</span><br></pre></td></tr></table></figure></li></ul><h1 id="修改表记录"><a href="#修改表记录" class="headerlink" title="修改表记录"></a>修改表记录</h1><ul><li><p>格式1，指量更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update 库名.表名</span><br><span class="line">set 字段名=值, 字段名=值, 字段名=值，……;</span><br></pre></td></tr></table></figure></li><li><p>条件匹配更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update 库名.表名</span><br><span class="line">set 字段名=值, 字段名=值, 字段名=值，…… </span><br><span class="line">where 条件表达式;</span><br></pre></td></tr></table></figure></li></ul><h1 id="删除记录"><a href="#删除记录" class="headerlink" title="删除记录"></a>删除记录</h1><ul><li><p>格式1，条件匹配删除</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 库名.表名 where 条件表达示;</span><br></pre></td></tr></table></figure></li><li><p>格式2，删除所有记录(慎用)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 库名.表名</span><br></pre></td></tr></table></figure></li></ul><h1 id="基本查询语句"><a href="#基本查询语句" class="headerlink" title="基本查询语句"></a>基本查询语句</h1><h2 id="范围匹配"><a href="#范围匹配" class="headerlink" title="范围匹配"></a>范围匹配</h2><ul><li><p>匹配范围名为人任意给我和值即可</p><ul><li>in (值列表)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from user where uid in (10, 20 ,30, 40);</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><ul><li>not in (值列表)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from user <span class="built_in">where</span> uid not <span class="keyword">in</span> (10, 20 ,30, 40);</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure><ul><li>between 数字 and 数字</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from user <span class="built_in">where</span> uid between 1 and 4;</span></span><br><span class="line">+----+--------+----------+------+------+---------+----------------+---------------+</span><br><span class="line">| id | name   | password | uid  | gid  | comment | homeaddr       | shell         |</span><br><span class="line">+----+--------+----------+------+------+---------+----------------+---------------+</span><br><span class="line">|  2 | bin    | x        |    1 |    1 | bin     | /bin           | /sbin/nologin |</span><br><span class="line">|  3 | daemon | x        |    2 |    2 | daemon  | /sbin          | /sbin/nologin |</span><br><span class="line">|  4 | adm    | x        |    3 |    4 | adm     | /var/adm       | /sbin/nologin |</span><br><span class="line">|  5 | lp     | x        |    4 |    7 | lp      | /var/spool/lpd | /sbin/nologin |</span><br><span class="line">+----+--------+----------+------+------+---------+----------------+---------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure></li></ul><h1 id="高级匹配"><a href="#高级匹配" class="headerlink" title="高级匹配"></a>高级匹配</h1><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><ul><li>用法（适用于select update delete操作）</li></ul><p>where 字段名 like ‘通配符’</p><p>_ 表示一个字符</p><p>% 表示0~n个字符</p><ul><li>示例：例出name列，值是4个字符的记录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name from user where name like &quot;____&quot;;</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><ul><li>用法</li></ul><p>where 字段名 regexp ‘正则表达示’</p><p>正则元字符 ^ $ . [] * |</p><blockquote><p>^ 开头</p><p>$结尾</p></blockquote><ul><li>示例</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 例出name值以J开头或以y结尾的记录</span></span><br><span class="line">select * from db1.t2 where name regexp &quot;^j | y$&quot;;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以范围内的任意一个开头</span></span><br><span class="line">select * from db1.t2 where name regexp &quot;^[abcd]&quot;;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 任意一个开头，任意一个结尾，只包含三位数</span> </span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name, uid from user <span class="built_in">where</span> uid regexp <span class="string">&#x27;^...$&#x27;</span>;</span></span><br><span class="line">+-----------------+------+</span><br><span class="line">| name            | uid  |</span><br><span class="line">+-----------------+------+</span><br><span class="line">| systemd-network |  192 |</span><br><span class="line">| polkitd         |  999 |</span><br><span class="line">| chrony          |  998 |</span><br><span class="line">+-----------------+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以r开头 t结尾 中间有一个或多个字符</span></span><br><span class="line">select * from name, uid from user where regexp &#x27;^r.*t$&#x27;; b   </span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select id, name, uid from user <span class="built_in">where</span> uid &lt; 5;</span></span><br><span class="line">+----+--------+------+</span><br><span class="line">| id | name   | uid  |</span><br><span class="line">+----+--------+------+</span><br><span class="line">|  1 | root   |    0 |</span><br><span class="line">|  2 | bin    |    1 |</span><br><span class="line">|  3 | daemon |    2 |</span><br><span class="line">|  4 | adm    |    3 |</span><br><span class="line">|  5 | lp     |    4 |</span><br><span class="line">+----+--------+------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> update user <span class="built_in">set</span> uid = uid + 1 <span class="built_in">where</span> uid &lt; 5;</span></span><br><span class="line">Query OK, 5 rows affected (0.03 sec)</span><br><span class="line">Rows matched: 5  Changed: 5  Warnings: 0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select id, name, uid from user <span class="built_in">where</span> uid &lt; 5;</span></span><br><span class="line">+----+--------+------+</span><br><span class="line">| id | name   | uid  |</span><br><span class="line">+----+--------+------+</span><br><span class="line">|  1 | root   |    1 |</span><br><span class="line">|  2 | bin    |    2 |</span><br><span class="line">|  3 | daemon |    3 |</span><br><span class="line">|  4 | adm    |    4 |</span><br><span class="line">+----+--------+------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 除法</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name, uid , (gid + uid) /2 as pjs from user  <span class="built_in">where</span> uid &lt; 5;</span></span><br><span class="line">+--------+------+--------+</span><br><span class="line">| name   | uid  | pjs    |</span><br><span class="line">+--------+------+--------+</span><br><span class="line">| root   |    1 | 0.5000 |</span><br><span class="line">| bin    |    2 | 1.5000 |</span><br><span class="line">| daemon |    3 | 2.5000 |</span><br><span class="line">| adm    |    4 | 4.0000 |</span><br><span class="line">+--------+------+--------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获得出生年份</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name, age, year(now()) - age as csnf from user <span class="built_in">where</span> name=<span class="string">&quot;root&quot;</span>;</span></span><br><span class="line">+------+------+------+</span><br><span class="line">| name | age  | csnf |</span><br><span class="line">+------+------+------+</span><br><span class="line">| root |   20 | 2001 |</span><br><span class="line">+------+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="操作查询结果"><a href="#操作查询结果" class="headerlink" title="操作查询结果"></a>操作查询结果</h1><p>查最小值：</p><ul><li>min</li><li>max</li><li>sum</li><li>avg</li></ul><h2 id="排序-分组-去重显示"><a href="#排序-分组-去重显示" class="headerlink" title="排序 分组 去重显示"></a>排序 分组 去重显示</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 排序</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name, uid from user <span class="built_in">where</span> uid between 10 and 100 order by uid desc;</span></span><br><span class="line">+----------+------+</span><br><span class="line">| name     | uid  |</span><br><span class="line">+----------+------+</span><br><span class="line">| nobody   |   99 |</span><br><span class="line">| postfix  |   89 |</span><br><span class="line">| dbus     |   81 |</span><br><span class="line">| sshd     |   74 |</span><br><span class="line">| tcpdump  |   72 |</span><br><span class="line">| ntp      |   38 |</span><br><span class="line">| mysql    |   27 |</span><br><span class="line">| ftp      |   14 |</span><br><span class="line">| games    |   12 |</span><br><span class="line">| operator |   11 |</span><br><span class="line">+----------+------+</span><br><span class="line">10 rows in set (0.01 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 分组显示</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select shell from user <span class="built_in">where</span> uid &lt; 100 group by shell;</span></span><br><span class="line">+----------------+</span><br><span class="line">| shell          |</span><br><span class="line">+----------------+</span><br><span class="line">| /bin/bash      |</span><br><span class="line">| /bin/false     |</span><br><span class="line">| /bin/sync      |</span><br><span class="line">| /sbin/halt     |</span><br><span class="line">| /sbin/nologin  |</span><br><span class="line">| /sbin/shutdown |</span><br><span class="line">+----------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 去重查询显示</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select distinct  gid from user;</span></span><br><span class="line">+------+</span><br><span class="line">| gid  |</span><br><span class="line">+------+</span><br><span class="line">|    0 |</span><br><span class="line">|    1 |</span><br><span class="line">|    2 |</span><br><span class="line">|    4 |</span><br><span class="line">|    7 |</span><br><span class="line">|   12 |</span><br><span class="line">|  100 |</span><br><span class="line">|   50 |</span><br><span class="line">|   99 |</span><br><span class="line">|  192 |</span><br><span class="line">|   81 |</span><br><span class="line">|  998 |</span><br><span class="line">|   89 |</span><br><span class="line">|   74 |</span><br><span class="line">|  996 |</span><br><span class="line">|   72 |</span><br><span class="line">|   38 |</span><br><span class="line">|   27 |</span><br><span class="line">+------+</span><br><span class="line">18 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 过滤查询结果</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 对查询出来的结果再过滤一遍</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name from db3.user <span class="built_in">where</span> uid &gt;=1000 having name=<span class="string">&quot;bob&quot;</span>;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure><h2 id="限制查询结果显示行数"><a href="#限制查询结果显示行数" class="headerlink" title="限制查询结果显示行数"></a>限制查询结果显示行数</h2><ul><li>用法</li></ul><p>sql 查询 limit 数字; //显示查询结果前多少条记录</p><p>sql查询 limit 数据1， 数字2 ;//显示指定范围内的查询结果;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示查询结果的前三行</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name, uid, gid from user <span class="built_in">limit</span> 3;</span></span><br><span class="line">+--------+------+------+</span><br><span class="line">| name   | uid  | gid  |</span><br><span class="line">+--------+------+------+</span><br><span class="line">| root   |    1 |    0 |</span><br><span class="line">| bin    |    2 |    1 |</span><br><span class="line">| daemon |    3 |    2 |</span><br><span class="line">+--------+------+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示查询结果的范围，第一行为0 。第一个数字是起始行，第二个数字表示一共显示多少行</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select name, uid, gid from user <span class="built_in">limit</span> 4,7;</span></span><br><span class="line">+----------+------+------+</span><br><span class="line">| name     | uid  | gid  |</span><br><span class="line">+----------+------+------+</span><br><span class="line">| lp       |    5 |    7 |</span><br><span class="line">| sync     |    5 |    0 |</span><br><span class="line">| shutdown |    6 |    0 |</span><br><span class="line">| halt     |    7 |    0 |</span><br><span class="line">| mail     |    8 |   12 |</span><br><span class="line">| operator |   11 |    0 |</span><br><span class="line">| games    |   12 |  100 |</span><br><span class="line">+----------+------+------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="搭建PHP-myadmin"><a href="#搭建PHP-myadmin" class="headerlink" title="搭建PHP myadmin"></a>搭建PHP myadmin</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd php php-mysql php-devel php-fpm</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl enable httpd</span><br><span class="line"></span><br><span class="line">systemctl start  php-fpm </span><br><span class="line">systemctl enable  php-fpm </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装phpMyAdmin软件包</span></span><br><span class="line">wget https://files.phpmyadmin.net/phpMyAdmin/2.11.11.3/phpMyAdmin-2.11.11.3-all-languages.zip --no-check-certificate</span><br><span class="line"></span><br><span class="line">unzip phpMyAdmin-2.11.11.3-all-languages.zip</span><br><span class="line">放到/var/www/htmp/phpmyadmin文件里</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建主配置文件</span></span><br><span class="line">[root@mx html]# cd phpmyadmin/</span><br><span class="line">[root@mx phpmyadmin]# ls</span><br><span class="line">browse_foreigners.php  db_export.php       Documentation.txt  LICENSE             pmd_display_field.php  readme.php              server_processlist.php  tbl_export.php      tbl_sql.php</span><br><span class="line">calendar.php           db_import.php       error.php          license.php         pmd_general.php        RELEASE-DATE-2.11.11.3  server_sql.php          tbl_import.php      tbl_structure.php</span><br><span class="line">ChangeLog              db_operations.php   export.php         main.php            pmd_help.php           scripts                 server_status.php       tbl_indexes.php     themes</span><br><span class="line">changelog.php          db_printview.php    favicon.ico        navigation.php      pmd_pdf.php            server_binlog.php       server_variables.php    tbl_move_copy.php   themes.php</span><br><span class="line">chk_rel.php            db_qbe.php          import.php         pdf_pages.php       pmd_relation_new.php   server_collations.php   show_config_errors.php  tbl_operations.php  TODO</span><br><span class="line">config.sample.inc.php  db_search.php       index.php          pdf_schema.php      pmd_relation_upd.php   server_databases.php    sql.php                 tbl_printview.php   transformation_overview.php</span><br><span class="line">contrib                db_sql.php          INSTALL            phpinfo.php         pmd_save_pos.php       server_engines.php      tbl_addfield.php        tbl_relation.php    transformation_wrapper.php</span><br><span class="line">CREDITS                db_structure.php    js                 phpmyadmin.css.php  print.css              server_export.php       tbl_alter.php           tbl_replace.php     translators.html</span><br><span class="line">db_create.php          docs.css            lang               pmd                 querywindow.php        server_import.php       tbl_change.php          tbl_row_action.php  user_password.php</span><br><span class="line">db_datadict.php        Documentation.html  libraries          pmd_common.php      README                 server_privileges.php   tbl_create.php          tbl_select.php      view_create.php</span><br><span class="line">[root@mx phpmyadmin]# cp config.sample.inc.php config.inc.php</span><br><span class="line">[root@mx phpmyadmin]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim config.inc.php</span><br></pre></td></tr></table></figure><p><img src="C:\Users\zounan\AppData\Roaming\Typora\typora-user-images\image-20211013113325589.png" alt="image-20211013113325589"></p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://116.63.133.222/phpmyadmin/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 登录时使用数据库的用户名和密码</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/13/8PtIsS6RaoicANb.png" alt="image-20211013113712469"></p><p><img src="https://i.loli.net/2021/10/13/NH45a6oTZDXv7FS.png" alt="image-20211013113948105"></p><h2 id="授权grant"><a href="#授权grant" class="headerlink" title="授权grant"></a>授权grant</h2><ul><li><p>授权： 添加用户并设置权限及连接密码</p></li><li><p>命令格式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant 权限列表 on 库名 to 用户名@&quot;客户端地址&quot; identified by &quot;密码&quot; with grant option;// 有授权权限，可选项。也就是可以再增加人员</span><br></pre></td></tr></table></figure><p><strong>权限列表</strong></p><ul><li>all    // 所有权限</li><li>usage   //无权限</li><li>select, update, insert   //个别权限</li><li>select ,update(字段1，字段n)  // 指定字段</li></ul><p><strong>库名</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*.*    所有库所有表</span><br><span class="line">库名.*   //一个库</span><br><span class="line">库名.表名 //一张表</span><br></pre></td></tr></table></figure><p><strong>客户端地址</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash"> //所有主机</span></span><br><span class="line">192.168.4.%  //网段内的所有主机</span><br><span class="line">192.168.4.1  //1台主机</span><br><span class="line">localhost    //数据库服务器本身</span><br></pre></td></tr></table></figure><p><strong>追加权限</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">授权的话，要同时给这张表权限才行。因为添加权限时会往里面存</span></span><br><span class="line">grant insert on mysql.* to yaya66@&quot;localhost&quot;;</span><br></pre></td></tr></table></figure><blockquote><h1 id="安装mysql-client-客户端"><a href="#安装mysql-client-客户端" class="headerlink" title="安装mysql-client 客户端"></a>安装mysql-client 客户端</h1><p>yum install -y mariadb.x86_64 mariadb-libs.x86_64</p></blockquote><h1 id="授权库"><a href="#授权库" class="headerlink" title="授权库"></a>授权库</h1><h2 id="授权库mysql"><a href="#授权库mysql" class="headerlink" title="授权库mysql"></a>授权库mysql</h2></li><li><p>mysql库记录授权信息，主要表如下：</p><ul><li>user 表 记录已有授权用户及全局权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select user,host  from user;</span></span><br><span class="line">+-----------+-----------+</span><br><span class="line">| user      | host      |</span><br><span class="line">+-----------+-----------+</span><br><span class="line">| mydba     | %         |</span><br><span class="line">| mysql.sys | localhost |</span><br><span class="line">| root      | localhost |</span><br><span class="line">| yaya      | localhost |</span><br><span class="line">+-----------+-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 改</span></span><br><span class="line">update mysql.user set 字段名=&quot;值&quot; where 条件; flush privileges;</span><br></pre></td></tr></table></figure><ul><li>db 表     记录已有授权用户对数据库的访问权限</li><li>tables_priv表  记录已有授权用户对表的访问权限</li><li>columans_priv表 记录已有授权用户对字段的访问权限</li></ul></li><li><p>查看表记录可以获取用户权限，也可以通过更新记录，修改用户权限</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看对某库的访问权限</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select user, db , host from mysql.db;</span></span><br><span class="line">+-----------+-----+-----------+</span><br><span class="line">| user      | db  | host      |</span><br><span class="line">+-----------+-----+-----------+</span><br><span class="line">| yaya      | db1 | localhost |</span><br><span class="line">| mysql.sys | sys | localhost |</span><br><span class="line">+-----------+-----+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  查询某个表对某个表字段的访问权限</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> grant select, update(name, uid) on db3.user to yaya88@<span class="string">&quot;localhost&quot;</span> identified by <span class="string">&quot;123qqq...A&quot;</span>;</span></span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.02 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from mysql.columns_priv;</span></span><br><span class="line">+-----------+-----+--------+------------+-------------+---------------------+-------------+</span><br><span class="line">| Host      | Db  | User   | Table_name | Column_name | Timestamp           | Column_priv |</span><br><span class="line">+-----------+-----+--------+------------+-------------+---------------------+-------------+</span><br><span class="line">| localhost | db3 | yaya88 | user       | name        | 0000-00-00 00:00:00 | Update      |</span><br><span class="line">| localhost | db3 | yaya88 | user       | uid         | 0000-00-00 00:00:00 | Update      |</span><br><span class="line">+-----------+-----+--------+------------+-------------+---------------------+-------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from mysql.tables_priv;</span></span><br><span class="line">+-----------+-----+-----------+------------+----------------+---------------------+------------+-------------+</span><br><span class="line">| Host      | Db  | User      | Table_name | Grantor        | Timestamp           | Table_priv | Column_priv |</span><br><span class="line">+-----------+-----+-----------+------------+----------------+---------------------+------------+-------------+</span><br><span class="line">| localhost | sys | mysql.sys | sys_config | root@localhost | 2021-09-26 11:55:24 | Select     |             |</span><br><span class="line">| localhost | db3 | yaya88    | user       | root@localhost | 0000-00-00 00:00:00 | Select     | Update      |</span><br><span class="line">+-----------+-----+-----------+------------+----------------+---------------------+------------+-------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux涨姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>等一等，我有话要说！</title>
      <link href="/firstPage/9bfdde7b1759/"/>
      <url>/firstPage/9bfdde7b1759/</url>
      
        <content type="html"><![CDATA[<h1 id="建站说明"><a href="#建站说明" class="headerlink" title="建站说明"></a>建站说明</h1><p>本站点是为了方便个人写作而建立，亦是为了记录工作和生活中的经验和心得，与遗忘做斗争。同时为了方便广大网友友好交流技术与资源共享，因此在访问本网站时，务必文明发言！！！</p><p>如您提问或留言，请留下准确的联系方式，方便有效联系，不浪费彼此宝贵的人生。</p>]]></content>
      
      
      <categories>
          
          <category> 我的心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> myThink </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
